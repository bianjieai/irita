swagger: '2.0'
info:
  title: Irita - Legacy REST and gRPC Gateway docs
  description: 'A REST interface for state queries, legacy transactions'
  version: 2.0.0
paths:
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - IRITA REST
      produces:
        - application/json
      responses:
        '200':
          description: Node status
          schema:
            type: object
            properties:
              application_version:
                properties:
                  build_tags:
                    type: string
                  client_name:
                    type: string
                  commit:
                    type: string
                  go:
                    type: string
                  name:
                    type: string
                  server_name:
                    type: string
                  version:
                    type: string
              node_info:
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  protocol_version:
                    properties:
                      p2p:
                        type: string
                        example: 7
                      block:
                        type: string
                        example: 10
                      app:
                        type: string
                        example: 0
                  network:
                    type: string
                    example: irita-2
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: '192.168.56.1:26656'
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.15.0
                  other:
                    description: more information on versions
                    type: object
                    properties:
                      tx_index:
                        type: string
                        example: 'on'
                      rpc_address:
                        type: string
                        example: 'tcp://0.0.0.0:26657'
        '500':
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - Tendermint RPC
      description: Get if the node is currently syning with other nodes
      produces:
        - application/json
      responses:
        '200':
          description: Node syncing status
          schema:
            type: object
            properties:
              syncing:
                type: boolean
        '500':
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        '200':
          description: The latest block
          schema:
            type: object
            properties:
              block_meta:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        example: IRITA-2
                      height:
                        type: number
                        example: 1
                      time:
                        type: string
                        example: '2017-12-30T05:53:09.287+01:00'
                      num_txs:
                        type: number
                        example: 0
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      total_txs:
                        type: number
                        example: 35
                      last_commit_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      data_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      next_validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      consensus_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      app_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      last_results_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      evidence_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      proposer_address:
                        type: string
                        description: bech32 encoded address
                        example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
                      version:
                        type: object
                        properties:
                          block:
                            type: string
                            example: 10
                          app:
                            type: string
                            example: 0
                  block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      parts:
                        type: object
                        properties:
                          total:
                            type: number
                            example: 0
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
              block:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        example: IRITA-2
                      height:
                        type: number
                        example: 1
                      time:
                        type: string
                        example: '2017-12-30T05:53:09.287+01:00'
                      num_txs:
                        type: number
                        example: 0
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      total_txs:
                        type: number
                        example: 35
                      last_commit_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      data_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      next_validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      consensus_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      app_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      last_results_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      evidence_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      proposer_address:
                        type: string
                        description: bech32 encoded address
                        example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
                      version:
                        type: object
                        properties:
                          block:
                            type: string
                            example: 10
                          app:
                            type: string
                            example: 0
                  txs:
                    type: array
                    items:
                      type: string
                  evidence:
                    type: array
                    items:
                      type: string
                  last_commit:
                    type: object
                    properties:
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      precommits:
                        type: array
                        items:
                          type: object
                          properties:
                            validator_address:
                              type: string
                            validator_index:
                              type: string
                              example: '0'
                            height:
                              type: string
                              example: '0'
                            round:
                              type: string
                              example: '0'
                            timestamp:
                              type: string
                              example: '2017-12-30T05:53:09.287+01:00'
                            type:
                              type: number
                              example: 2
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                                parts:
                                  type: object
                                  properties:
                                    total:
                                      type: number
                                      example: 0
                                    hash:
                                      type: string
                                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                            signature:
                              type: string
                              example: >-
                                7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
        '500':
          description: Server internal error
  '/blocks/{height}':
    get:
      summary: Get a block at a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        '200':
          description: The block at a specific height
          schema:
            type: object
            properties:
              block_meta:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        example: IRITA-2
                      height:
                        type: number
                        example: 1
                      time:
                        type: string
                        example: '2017-12-30T05:53:09.287+01:00'
                      num_txs:
                        type: number
                        example: 0
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      total_txs:
                        type: number
                        example: 35
                      last_commit_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      data_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      next_validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      consensus_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      app_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      last_results_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      evidence_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      proposer_address:
                        type: string
                        description: bech32 encoded address
                        example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
                      version:
                        type: object
                        properties:
                          block:
                            type: string
                            example: 10
                          app:
                            type: string
                            example: 0
                  block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      parts:
                        type: object
                        properties:
                          total:
                            type: number
                            example: 0
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
              block:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        example: IRITA-2
                      height:
                        type: number
                        example: 1
                      time:
                        type: string
                        example: '2017-12-30T05:53:09.287+01:00'
                      num_txs:
                        type: number
                        example: 0
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      total_txs:
                        type: number
                        example: 35
                      last_commit_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      data_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      next_validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      consensus_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      app_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      last_results_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      evidence_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      proposer_address:
                        type: string
                        description: bech32 encoded address
                        example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
                      version:
                        type: object
                        properties:
                          block:
                            type: string
                            example: 10
                          app:
                            type: string
                            example: 0
                  txs:
                    type: array
                    items:
                      type: string
                  evidence:
                    type: array
                    items:
                      type: string
                  last_commit:
                    type: object
                    properties:
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      precommits:
                        type: array
                        items:
                          type: object
                          properties:
                            validator_address:
                              type: string
                            validator_index:
                              type: string
                              example: '0'
                            height:
                              type: string
                              example: '0'
                            round:
                              type: string
                              example: '0'
                            timestamp:
                              type: string
                              example: '2017-12-30T05:53:09.287+01:00'
                            type:
                              type: number
                              example: 2
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                                parts:
                                  type: object
                                  properties:
                                    total:
                                      type: number
                                      example: 0
                                    hash:
                                      type: string
                                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                            signature:
                              type: string
                              example: >-
                                7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
        '400':
          description: Invalid height
        '404':
          description: Request block height doesn't
        '500':
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        '200':
          description: The validator set at the latest block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      description: bech32 encoded address
                      example: iva1sltcyjm5k0edlg59t47lsyw8gtgc3nudrwey98
                    pub_key:
                      type: string
                      example: >-
                        icp1zcjduepqwhwqn4h5v6mqa7k3kmy7cjzchsx5ptsrqaulwrgfmghy3k9jtdzs6rdddm
                    voting_power:
                      type: string
                      example: '1000'
                    proposer_priority:
                      type: string
                      example: '1000'
        '500':
          description: Server internal error
  '/validatorsets/{height}':
    get:
      summary: Get a validator set a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        '200':
          description: The validator set at a specific block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      description: bech32 encoded address
                      example: iva1sltcyjm5k0edlg59t47lsyw8gtgc3nudrwey98
                    pub_key:
                      type: string
                      example: >-
                        icp1zcjduepqwhwqn4h5v6mqa7k3kmy7cjzchsx5ptsrqaulwrgfmghy3k9jtdzs6rdddm
                    voting_power:
                      type: string
                      example: '1000'
                    proposer_priority:
                      type: string
                      example: '1000'
        '400':
          description: Invalid height
        '404':
          description: Block at height not available
        '500':
          description: Server internal error
  /txs:
    post:
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: txBroadcast
          description: >-
            The tx must be a signed StdTx. The supported broadcast modes include
            `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and
            `"async"`(return right away).
          required: true
          schema:
            type: object
            properties:
              tx:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: stake
                            amount:
                              type: string
                              example: '50'
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: >-
                          MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: '0'
                      sequence:
                        type: string
                        example: '0'
              mode:
                type: string
                example: block
      responses:
        '200':
          description: Tx broadcasting result
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '500':
          description: Internal Server Error
  /cosmos/tx/v1beta1/simulate:
    post:
      summary: Simulate simulates executing a transaction for estimating gas usage.
      operationId: Simulate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              gas_info:
                description: gas_info is the information about gas used in the simulation.
                type: object
                properties:
                  gas_wanted:
                    type: string
                    format: uint64
                    description: >-
                      GasWanted is the maximum units of work we allow this tx to
                      perform.
                  gas_used:
                    type: string
                    format: uint64
                    description: GasUsed is the amount of gas actually consumed.
              result:
                description: result is the result of the simulation.
                type: object
                properties:
                  data:
                    type: string
                    format: byte
                    description: >-
                      Data is any data returned from message or handler
                      execution. It MUST be

                      length prefixed in order to separate data from multiple
                      message executions.
                  log:
                    type: string
                    description: >-
                      Log contains the log information from message or handler
                      execution.
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                                format: byte
                              value:
                                type: string
                                format: byte
                              index:
                                type: boolean
                            description: >-
                              EventAttribute is a single key-value pair,
                              associated with an event.
                      description: >-
                        Event allows application developers to attach additional
                        information to

                        ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx
                        and ResponseDeliverTx.

                        Later, transactions may be queried using these events.
                    description: >-
                      Events contains a slice of Event objects that were emitted
                      during message

                      or handler execution.
            description: |-
              SimulateResponse is the response type for the
              Service.SimulateRPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.SimulateRequest'
      tags:
        - Service
  /cosmos/tx/v1beta1/txs:
    get:
      summary: GetTxsEvent fetches txs by event.
      operationId: GetTxsEvent
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetTxsEventResponse'
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: events
          description: events is the list of transaction event type.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: order_by
          description: |2-
             - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
             - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
             - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
          in: query
          required: false
          type: string
          enum:
            - ORDER_BY_UNSPECIFIED
            - ORDER_BY_ASC
            - ORDER_BY_DESC
          default: ORDER_BY_UNSPECIFIED
      tags:
        - Service
    post:
      summary: BroadcastTx broadcast transaction.
      operationId: BroadcastTx
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tx_response:
                type: object
                properties:
                  height:
                    type: string
                    format: int64
                    title: The block height
                  txhash:
                    type: string
                    description: The transaction hash.
                  codespace:
                    type: string
                    title: Namespace for the Code
                  code:
                    type: integer
                    format: int64
                    description: Response code.
                  data:
                    type: string
                    description: 'Result bytes, if any.'
                  raw_log:
                    type: string
                    description: >-
                      The output of the application's logger (raw string). May
                      be

                      non-deterministic.
                  logs:
                    type: array
                    items:
                      type: object
                      properties:
                        msg_index:
                          type: integer
                          format: int64
                        log:
                          type: string
                        events:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              attributes:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  description: >-
                                    Attribute defines an attribute wrapper where
                                    the key and value are

                                    strings instead of raw bytes.
                            description: >-
                              StringEvent defines en Event object wrapper where
                              all the attributes

                              contain key/value pairs that are strings instead
                              of raw bytes.
                          description: >-
                            Events contains a slice of Event objects that were
                            emitted during some

                            execution.
                      description: >-
                        ABCIMessageLog defines a structure containing an indexed
                        tx ABCI message log.
                    description: >-
                      The output of the application's logger (typed). May be
                      non-deterministic.
                  info:
                    type: string
                    description: Additional information. May be non-deterministic.
                  gas_wanted:
                    type: string
                    format: int64
                    description: Amount of gas requested for transaction.
                  gas_used:
                    type: string
                    format: int64
                    description: Amount of gas consumed by transaction.
                  tx:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON

                      ====

                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  timestamp:
                    type: string
                    description: >-
                      Time of the previous block. For heights > 1, it's the
                      weighted median of

                      the timestamps of the valid votes in the block.LastCommit.
                      For height == 1,

                      it's genesis time.
                description: >-
                  TxResponse defines a structure containing relevant tx data and
                  metadata. The

                  tags are stringified and the log is JSON decoded.
            description: |-
              BroadcastTxResponse is the response type for the
              Service.BroadcastTx method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              tx_bytes:
                type: string
                format: byte
                description: tx_bytes is the raw transaction.
              mode:
                type: string
                enum:
                  - BROADCAST_MODE_UNSPECIFIED
                  - BROADCAST_MODE_BLOCK
                  - BROADCAST_MODE_SYNC
                  - BROADCAST_MODE_ASYNC
                default: BROADCAST_MODE_UNSPECIFIED
                description: >-
                  BroadcastMode specifies the broadcast mode for the
                  TxService.Broadcast RPC method.

                   - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
                   - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
                  the tx to be committed in a block.
                   - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
                  a CheckTx execution response only.
                   - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
                  immediately.
            description: >-
              BroadcastTxRequest is the request type for the
              Service.BroadcastTxRequest

              RPC method.
      tags:
        - Service
  '/cosmos/tx/v1beta1/txs/{hash}':
    get:
      summary: GetTx fetches a tx by hash.
      operationId: GetTx
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetTxResponse'
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: hash
          description: 'hash is the tx hash to query, encoded as a hex string.'
          in: path
          required: true
          type: string
      tags:
        - Service
  '/cosmos/auth/v1beta1/accounts/{address}':
    get:
      summary: Account returns account details based on address.
      operationId: Account
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                description: account defines the account of the corresponding address.
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
            description: >-
              QueryAccountResponse is the response type for the Query/Account
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address defines the address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/params:
    get:
      summary: Params queries all parameters.
      operationId: AuthParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  max_memo_characters:
                    type: string
                    format: uint64
                  tx_sig_limit:
                    type: string
                    format: uint64
                  tx_size_cost_per_byte:
                    type: string
                    format: uint64
                  sig_verify_cost_ed25519:
                    type: string
                    format: uint64
                  sig_verify_cost_secp256k1:
                    type: string
                    format: uint64
                  sig_verify_cost_sm2:
                    type: string
                    format: uint64
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  '/cosmos/bank/v1beta1/balances/{address}':
    get:
      summary: AllBalances queries the balance of all coins for a single account.
      operationId: AllBalances
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balances:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: balances is the balances of all the coins.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAllBalancesResponse is the response type for the
              Query/AllBalances RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/bank/v1beta1/balances/{address}/{denom}':
    get:
      summary: Balance queries the balance of a single coin for a single account.
      operationId: Balance
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QueryBalanceResponse is the response type for the Query/Balance
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          type: string
        - name: denom
          description: denom is the coin denom to query balances for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      summary: >-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      operationId: DenomsMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metadatas:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
                    denom_units:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            description: >-
                              denom represents the string name of the given
                              denom unit (e.g uatom).
                          exponent:
                            type: integer
                            format: int64
                            description: >-
                              exponent represents power of 10 exponent that one
                              must

                              raise the base_denom to in order to equal the
                              given DenomUnit's denom

                              1 denom = 1^exponent base_denom

                              (e.g. with a base_denom of uatom, one can create a
                              DenomUnit of 'atom' with

                              exponent = 6, thus: 1 atom = 10^6 uatom).
                          aliases:
                            type: array
                            items:
                              type: string
                            title: >-
                              aliases is a list of string aliases for the given
                              denom
                        description: |-
                          DenomUnit represents a struct that describes a given
                          denomination unit of the basic token.
                      title: >-
                        denom_units represents the list of DenomUnit's for a
                        given coin
                    base:
                      type: string
                      description: >-
                        base represents the base denom (should be the DenomUnit
                        with exponent = 0).
                    display:
                      type: string
                      description: |-
                        display indicates the suggested denom that should be
                        displayed in clients.
                  description: |-
                    Metadata represents a struct that describes
                    a basic token.
                description: >-
                  metadata provides the client information for all the
                  registered tokens.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryDenomsMetadataResponse is the response type for the
              Query/DenomsMetadata RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/bank/v1beta1/denoms_metadata/{denom}':
    get:
      summary: DenomsMetadata queries the client metadata of a given coin denomination.
      operationId: DenomMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metadata:
                type: object
                properties:
                  description:
                    type: string
                  denom_units:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          description: >-
                            denom represents the string name of the given denom
                            unit (e.g uatom).
                        exponent:
                          type: integer
                          format: int64
                          description: >-
                            exponent represents power of 10 exponent that one
                            must

                            raise the base_denom to in order to equal the given
                            DenomUnit's denom

                            1 denom = 1^exponent base_denom

                            (e.g. with a base_denom of uatom, one can create a
                            DenomUnit of 'atom' with

                            exponent = 6, thus: 1 atom = 10^6 uatom).
                        aliases:
                          type: array
                          items:
                            type: string
                          title: >-
                            aliases is a list of string aliases for the given
                            denom
                      description: |-
                        DenomUnit represents a struct that describes a given
                        denomination unit of the basic token.
                    title: >-
                      denom_units represents the list of DenomUnit's for a given
                      coin
                  base:
                    type: string
                    description: >-
                      base represents the base denom (should be the DenomUnit
                      with exponent = 0).
                  display:
                    type: string
                    description: |-
                      display indicates the suggested denom that should be
                      displayed in clients.
                description: |-
                  Metadata represents a struct that describes
                  a basic token.
            description: >-
              QueryDenomMetadataResponse is the response type for the
              Query/DenomMetadata RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom is the coin denom to query the metadata for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/bank/v1beta1/params:
    get:
      summary: Params queries the parameters of x/bank module.
      operationId: BankParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  send_enabled:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        enabled:
                          type: boolean
                      description: >-
                        SendEnabled maps coin denom to a send_enabled status
                        (whether a denom is

                        sendable).
                  default_send_enabled:
                    type: boolean
                description: Params defines the parameters for the bank module.
            description: >-
              QueryParamsResponse defines the response type for querying x/bank
              parameters.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/bank/v1beta1/supply:
    get:
      summary: TotalSupply queries the total supply of all coins.
      operationId: TotalSupply
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              supply:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                title: supply is the supply of the coins
            title: >-
              QueryTotalSupplyResponse is the response type for the
              Query/TotalSupply RPC

              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/cosmos/bank/v1beta1/supply/{denom}':
    get:
      summary: SupplyOf queries the supply of a single coin.
      operationId: SupplyOf
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QuerySupplyOfResponse is the response type for the Query/SupplyOf
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom is the coin denom to query balances for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/evidence/v1beta1/evidence:
    get:
      summary: AllEvidence queries all evidence.
      operationId: AllEvidence
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              evidence:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
                description: evidence returns all evidences.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAllEvidenceResponse is the response type for the
              Query/AllEvidence RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/evidence/v1beta1/evidence/{evidence_hash}':
    get:
      summary: Evidence queries evidence based on evidence hash.
      operationId: Evidence
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              evidence:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON

                  ====

                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: >-
              QueryEvidenceResponse is the response type for the Query/Evidence
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: evidence_hash
          description: evidence_hash defines the hash of the requested evidence.
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
  '/cosmos/upgrade/v1beta1/applied_plan/{name}':
    get:
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      operationId: AppliedPlan
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              height:
                type: string
                format: int64
                description: height is the block height at which the plan was applied.
            description: >-
              QueryAppliedPlanResponse is the response type for the
              Query/AppliedPlan RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: name
          description: name is the name of the applied plan to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      summary: CurrentPlan queries the current upgrade plan.
      operationId: CurrentPlan
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              plan:
                description: plan is the current upgrade plan.
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      Sets the name for the upgrade. This name will be used by
                      the upgraded

                      version of the software to apply any special "on-upgrade"
                      commands during

                      the first BeginBlock method after the upgrade is applied.
                      It is also used

                      to detect whether a software version can handle a given
                      upgrade. If no

                      upgrade handler with this name has been set in the
                      software, it will be

                      assumed that the software is out-of-date when the upgrade
                      Time or Height is

                      reached and the software will exit.
                  time:
                    type: string
                    format: date-time
                    description: >-
                      The time after which the upgrade must be performed.

                      Leave set to its zero value to use a pre-defined Height
                      instead.
                  height:
                    type: string
                    format: int64
                    description: |-
                      The height at which the upgrade must be performed.
                      Only used if Time is not set.
                  info:
                    type: string
                    title: >-
                      Any application specific upgrade info to be included
                      on-chain

                      such as a git commit that validators could automatically
                      upgrade to
                  upgraded_client_state:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON

                      ====

                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    title: >-
                      IBC-enabled chains can opt-in to including the upgraded
                      client state in its upgrade plan

                      This will make the chain commit to the correct upgraded
                      (self) client state before the upgrade occurs,

                      so that connecting chains can verify that the new upgraded
                      client is valid by verifying a proof on the

                      previous version of the chain.

                      This will allow IBC connections to persist smoothly across
                      planned chain upgrades
            description: >-
              QueryCurrentPlanResponse is the response type for the
              Query/CurrentPlan RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  '/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}':
    get:
      summary: |-
        UpgradedConsensusState queries the consensus state that will serve
        as a trusted kernel for the next version of this chain. It will only be
        stored at the last height of this chain.
        UpgradedConsensusState RPC not supported with legacy querier
      operationId: UpgradedConsensusState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              upgraded_consensus_state:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON

                  ====

                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: >-
              QueryUpgradedConsensusStateResponse is the response type for the
              Query/UpgradedConsensusState

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: last_height
          description: |-
            last height of the current chain must be sent in request
            as this is the height under which next consensus state is stored
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  '/irismod/nft/collections/{denom_id}':
    get:
      summary: Collection queries the NFTs of the specified denom
      operationId: Collection
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              collection:
                type: object
                properties:
                  denom:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      schema:
                        type: string
                      creator:
                        type: string
                    title: Denom defines a type of NFT
                  nfts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        uri:
                          type: string
                        data:
                          type: string
                        owner:
                          type: string
                      title: BaseNFT defines a non-fungible token
                title: Collection defines a type of collection
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryCollectionResponse is the response type for the
              Query/Collection RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom_id
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/irismod/nft/collections/{denom_id}/supply':
    get:
      summary: Supply queries the total supply of a given denom or owner
      operationId: Supply
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: string
                format: uint64
            title: >-
              QuerySupplyResponse is the response type for the Query/Supply RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom_id
          in: path
          required: true
          type: string
        - name: owner
          in: query
          required: false
          type: string
      tags:
        - Query
  /irismod/nft/denoms:
    get:
      summary: Denoms queries all the denoms
      operationId: Denoms
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              denoms:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    schema:
                      type: string
                    creator:
                      type: string
                  title: Denom defines a type of NFT
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryDenomsResponse is the response type for the Query/Denoms RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/irismod/nft/denoms/{denom_id}':
    get:
      summary: Denom queries the definition of a given denom
      operationId: Denom
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              denom:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  schema:
                    type: string
                  creator:
                    type: string
                title: Denom defines a type of NFT
            title: >-
              QueryDenomResponse is the response type for the Query/Denom RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /irismod/nft/nfts:
    get:
      summary: Owner queries the NFTs of the specified owner
      operationId: Owner
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              owner:
                type: object
                properties:
                  address:
                    type: string
                  id_collections:
                    type: array
                    items:
                      type: object
                      properties:
                        denom_id:
                          type: string
                        token_ids:
                          type: array
                          items:
                            type: string
                      title: >-
                        IDCollection defines a type of collection with specified
                        ID
                title: Owner defines a type of owner
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryOwnerResponse is the response type for the Query/Owner RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom_id
          in: query
          required: false
          type: string
        - name: owner
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/irismod/nft/nfts/{denom_id}/{token_id}':
    get:
      summary: NFT queries the NFT for the given denom and token ID
      operationId: NFT
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              nft:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  uri:
                    type: string
                  data:
                    type: string
                  owner:
                    type: string
                title: BaseNFT defines a non-fungible token
            title: QueryNFTResponse is the response type for the Query/NFT RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom_id
          in: path
          required: true
          type: string
        - name: token_id
          in: path
          required: true
          type: string
      tags:
        - Query
  '/irismod/record/records/{record_id}':
    get:
      summary: Record queries the record by the given record ID
      operationId: Record
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              record:
                type: object
                properties:
                  tx_hash:
                    type: string
                  contents:
                    type: array
                    items:
                      type: object
                      properties:
                        digest:
                          type: string
                        digest_algo:
                          type: string
                        uri:
                          type: string
                        meta:
                          type: string
                      title: Content defines the detailed information for a record
                  creator:
                    type: string
                title: Record defines the record standard
            title: >-
              QueryRecordResponse is the response type for the Query/Record RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: record_id
          in: path
          required: true
          type: string
      tags:
        - Query
  '/irismod/service/bindings/{service_name}':
    get:
      summary: Bindings returns all service Bindings with service name and owner
      operationId: Bindings
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              service_bindings:
                type: array
                items:
                  type: object
                  properties:
                    service_name:
                      type: string
                    provider:
                      type: string
                    deposit:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                    pricing:
                      type: string
                    qos:
                      type: string
                      format: uint64
                    options:
                      type: string
                    available:
                      type: boolean
                    disabled_time:
                      type: string
                      format: date-time
                    owner:
                      type: string
                  title: ServiceBinding defines a standard for service binding
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryDefinitionsResponse is response type for the Query/Bindings
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: service_name
          in: path
          required: true
          type: string
        - name: owner
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/irismod/service/bindings/{service_name}/{provider}':
    get:
      summary: Binding returns service Binding with service name and provider
      operationId: Binding
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              service_binding:
                type: object
                properties:
                  service_name:
                    type: string
                  provider:
                    type: string
                  deposit:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  pricing:
                    type: string
                  qos:
                    type: string
                    format: uint64
                  options:
                    type: string
                  available:
                    type: boolean
                  disabled_time:
                    type: string
                    format: date-time
                  owner:
                    type: string
                title: ServiceBinding defines a standard for service binding
            title: >-
              QueryDefinitionResponse is response type for the Query/Binding RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: service_name
          in: path
          required: true
          type: string
        - name: provider
          in: path
          required: true
          type: string
      tags:
        - Query
  '/irismod/service/contexts/{request_context_id}':
    get:
      summary: RequestContext returns the request context
      operationId: RequestContext
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              request_context:
                type: object
                properties:
                  service_name:
                    type: string
                  providers:
                    type: array
                    items:
                      type: string
                  consumer:
                    type: string
                  input:
                    type: string
                  service_fee_cap:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  module_name:
                    type: string
                  timeout:
                    type: string
                    format: int64
                  repeated:
                    type: boolean
                  repeated_frequency:
                    type: string
                    format: uint64
                  repeated_total:
                    type: string
                    format: int64
                  batch_counter:
                    type: string
                    format: uint64
                  batch_request_count:
                    type: integer
                    format: int64
                  batch_response_count:
                    type: integer
                    format: int64
                  batch_response_threshold:
                    type: integer
                    format: int64
                  response_threshold:
                    type: integer
                    format: int64
                  batch_state:
                    type: string
                    enum:
                      - BATCH_RUNNING
                      - BATCH_COMPLETED
                    default: BATCH_RUNNING
                    description: >-
                      - BATCH_RUNNING: BATCH_RUNNING defines the running batch
                      status.
                       - BATCH_COMPLETED: BATCH_COMPLETED defines the completed batch status.
                    title: >-
                      RequestContextBatchState is a type alias that represents a
                      request batch status as a byte
                  state:
                    type: string
                    enum:
                      - RUNNING
                      - PAUSED
                      - COMPLETED
                    default: RUNNING
                    description: >-
                      - RUNNING: RUNNING defines the running request context
                      status
                       - PAUSED: PAUSED defines the paused request context status
                       - COMPLETED: COMPLETED defines the completed request context status
                    title: >-
                      RequestContextState is a type alias that represents a
                      request status as a byte
                title: RequestContext defines a standard for request context
            title: >-
              QueryRequestContextResponse is response type for the
              Query/RequestContext RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: request_context_id
          in: path
          required: true
          type: string
      tags:
        - Query
  '/irismod/service/definitions/{service_name}':
    get:
      summary: Definition returns service definition
      operationId: Definition
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              service_definition:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
                  author:
                    type: string
                  author_description:
                    type: string
                  schemas:
                    type: string
                title: ServiceDefinition defines a standard for service definition
            title: >-
              QueryDefinitionResponse is response type for the Query/Definition
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: service_name
          in: path
          required: true
          type: string
      tags:
        - Query
  '/irismod/service/fees/{provider}':
    get:
      summary: EarnedFees returns the earned service fee of one provider
      operationId: EarnedFees
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              fees:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            title: >-
              QueryEarnedFeesResponse is response type for the Query/EarnedFees
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: provider
          in: path
          required: true
          type: string
      tags:
        - Query
  '/irismod/service/owners/{owner}/withdraw-address':
    get:
      summary: WithdrawAddress returns the withdraw address of the binding owner
      operationId: WithdrawAddress
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              withdraw_address:
                type: string
            title: >-
              QueryWithdrawAddressResponse is response type for the
              Query/WithdrawAddress RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: owner
          in: path
          required: true
          type: string
      tags:
        - Query
  /irismod/service/params:
    get:
      summary: Params queries the service parameters
      operationId: ServiceParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  max_request_timeout:
                    type: string
                    format: int64
                  min_deposit_multiple:
                    type: string
                    format: int64
                  min_deposit:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  service_fee_tax:
                    type: string
                  slash_fraction:
                    type: string
                  complaint_retrospect:
                    type: string
                  arbitration_time_limit:
                    type: string
                  tx_size_limit:
                    type: string
                    format: uint64
                  base_denom:
                    type: string
                  restricted_service_fee_denom:
                    type: boolean
                title: Params defines service module's parameters
              res:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryParametersResponse is response type for the Query/Parameters
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/irismod/service/requests/{request_context_id}/{batch_counter}':
    get:
      summary: RequestsByReqCtx returns all requests of one service call batch
      operationId: RequestsByReqCtx
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              requests:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    service_name:
                      type: string
                    provider:
                      type: string
                    consumer:
                      type: string
                    input:
                      type: string
                    service_fee:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                    request_height:
                      type: string
                      format: int64
                    expiration_height:
                      type: string
                      format: int64
                    request_context_id:
                      type: string
                    request_context_batch_counter:
                      type: string
                      format: uint64
                  title: Request defines a standard for request
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryRequestsByReqCtxResponse is response type for the
              Query/RequestsByReqCtx RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: request_context_id
          in: path
          required: true
          type: string
        - name: batch_counter
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/irismod/service/requests/{request_id}':
    get:
      summary: Request returns the request
      operationId: Request
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              request:
                type: object
                properties:
                  id:
                    type: string
                  service_name:
                    type: string
                  provider:
                    type: string
                  consumer:
                    type: string
                  input:
                    type: string
                  service_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  request_height:
                    type: string
                    format: int64
                  expiration_height:
                    type: string
                    format: int64
                  request_context_id:
                    type: string
                  request_context_batch_counter:
                    type: string
                    format: uint64
                title: Request defines a standard for request
            title: >-
              QueryRequestResponse is response type for the Query/Request RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: request_id
          in: path
          required: true
          type: string
      tags:
        - Query
  '/irismod/service/requests/{service_name}/{provider}':
    get:
      summary: Request returns all requests of one service with provider
      operationId: Requests
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              requests:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    service_name:
                      type: string
                    provider:
                      type: string
                    consumer:
                      type: string
                    input:
                      type: string
                    service_fee:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                    request_height:
                      type: string
                      format: int64
                    expiration_height:
                      type: string
                      format: int64
                    request_context_id:
                      type: string
                    request_context_batch_counter:
                      type: string
                      format: uint64
                  title: Request defines a standard for request
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryRequestsResponse is response type for the Query/Requests RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: service_name
          in: path
          required: true
          type: string
        - name: provider
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/irismod/service/responses/{request_context_id}/{batch_counter}':
    get:
      summary: Responses returns all responses of one service call batch
      operationId: Responses
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              responses:
                type: array
                items:
                  type: object
                  properties:
                    provider:
                      type: string
                    consumer:
                      type: string
                    result:
                      type: string
                    output:
                      type: string
                    request_context_id:
                      type: string
                    request_context_batch_counter:
                      type: string
                      format: uint64
                  title: Response defines a standard for response
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryResponsesResponse is response type for the Query/Responses
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: request_context_id
          in: path
          required: true
          type: string
        - name: batch_counter
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/irismod/service/responses/{request_id}':
    get:
      summary: Response returns the response of request
      operationId: Response
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              response:
                type: object
                properties:
                  provider:
                    type: string
                  consumer:
                    type: string
                  result:
                    type: string
                  output:
                    type: string
                  request_context_id:
                    type: string
                  request_context_batch_counter:
                    type: string
                    format: uint64
                title: Response defines a standard for response
            title: >-
              QueryResponseResponse is response type for the Query/Response RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: request_id
          in: path
          required: true
          type: string
      tags:
        - Query
  '/irismod/service/schemas/{schema_name}':
    get:
      summary: Schema returns the schema
      operationId: Schema
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              schema:
                type: string
            title: >-
              QuerySchemaResponse is response type for the Query/Schema RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: schema_name
          in: path
          required: true
          type: string
      tags:
        - Query
  /irismod/token/params:
    get:
      summary: Params queries the token parameters
      operationId: TokenParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  token_tax_rate:
                    type: string
                  issue_token_base_fee:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  mint_token_fee_ratio:
                    type: string
                title: Params defines token module's parameters
              res:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryParametersResponse is response type for the Query/Parameters
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /irismod/token/tokens:
    get:
      summary: Tokens returns the token list
      operationId: Tokens
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              Tokens:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryTokensResponse is response type for the Query/Tokens RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: owner
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/irismod/token/tokens/{denom}':
    get:
      summary: Token returns token with token name
      operationId: Token
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              Token:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON

                  ====

                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            title: QueryTokenResponse is response type for the Query/Token RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  '/irismod/token/tokens/{symbol}/fees':
    get:
      summary: Fees returns the fees to issue or mint a token
      operationId: Fees
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              exist:
                type: boolean
              issue_fee:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              mint_fee:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            title: QueryFeesResponse is response type for the Query/Fees RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: symbol
          in: path
          required: true
          type: string
      tags:
        - Query
  /irismod/token/total_burn:
    get:
      summary: TotalBurn queries all the burnt coins
      operationId: TotalBurn
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              burned_coins:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            title: >-
              QueryTotalBurnResponse is response type for the Query/TotalBurn
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /iritamod/node/nodes:
    get:
      summary: Nodes queries the nodes
      operationId: Nodes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              nodes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    certificate:
                      type: string
                  title: Node defines a struct to represent a node identity
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: |-
                  message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                title: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the corresponding

                  request message has used PageRequest
            title: >-
              QueryNodesResponse is the response type for the Query/Nodes RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs. count_total

            is only respected when offset is used. It is ignored when key is
            set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/iritamod/node/nodes/{id}':
    get:
      summary: Node queries the node by the given id
      operationId: Node
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              node:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  certificate:
                    type: string
                title: Node defines a struct to represent a node identity
            title: >-
              QueryNodeResponse is the response type for the Query/Node RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Query
  /iritamod/node/params:
    get:
      summary: Params queries the parameters of the node module
      operationId: NodeParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  historical_entries:
                    type: integer
                    format: int64
                description: Params defines the parameters for the node module.
            title: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /iritamod/node/validators:
    get:
      summary: Validators queries the validators
      operationId: Validators
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validators:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    pubkey:
                      type: string
                    certificate:
                      type: string
                    power:
                      type: string
                      format: int64
                    description:
                      type: string
                    jailed:
                      type: boolean
                    operator:
                      type: string
                  description: >-
                    Request defines a standard for validator. The validator will
                    participate the

                    blockchain consensus, power determines the probability of
                    proposing a new block.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: |-
                  message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                title: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the corresponding

                  request message has used PageRequest
            title: >-
              QueryValidatorsResponse is the response type for the
              Query/Validators RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs. count_total

            is only respected when offset is used. It is ignored when key is
            set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/iritamod/node/validators/{id}':
    get:
      summary: Validator queries the validator by the given id
      operationId: Validator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  pubkey:
                    type: string
                  certificate:
                    type: string
                  power:
                    type: string
                    format: int64
                  description:
                    type: string
                  jailed:
                    type: boolean
                  operator:
                    type: string
                description: >-
                  Request defines a standard for validator. The validator will
                  participate the

                  blockchain consensus, power determines the probability of
                  proposing a new block.
            title: >-
              QueryValidatorResponse is the response type for the
              Query/Validator RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Query
  '/iritamod/identity/identities/{id}':
    get:
      summary: Identity queries the identity by the given id
      operationId: Identity
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              identity:
                type: object
                properties:
                  id:
                    type: string
                  pub_keys:
                    type: array
                    items:
                      type: object
                      properties:
                        pub_key:
                          type: string
                        algorithm:
                          type: string
                          enum:
                            - UnknownPubKeyAlgorithm
                            - RSA
                            - DSA
                            - ECDSA
                            - ED25519
                            - SM2
                          default: UnknownPubKeyAlgorithm
                          description: >-
                            - UnknownPubKeyAlgorithm: UnknownPubKeyAlgorithm
                            defines an unknown algorithm name
                             - RSA: RSA defines a RSA algorithm name
                             - DSA: DSA defines a DSA algorithm name.
                             - ECDSA: ECDSA defines an ECDSA algorithm name.
                             - ED25519: ED25519 defines an ED25519 algorithm name.
                             - SM2: SM2 defines an SM2 algorithm name.
                          title: >-
                            PubKeyAlgorithm defines the algorithm names for the
                            public key
                      title: >-
                        PubKey represents a public key along with the
                        corresponding algorithm
                  certificates:
                    type: array
                    items:
                      type: string
                  credentials:
                    type: string
                  owner:
                    type: string
                title: Identity defines a struct for an identity
            title: >-
              QueryIdentityResponse is response type for the Query/Identity RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Query
  /wasm/v1beta1/code:
    get:
      summary: Codes gets the metadata for all stored wasm codes
      operationId: Codes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              code_infos:
                type: array
                items:
                  type: object
                  properties:
                    code_id:
                      type: string
                      format: uint64
                    creator:
                      type: string
                    data_hash:
                      type: string
                      format: byte
                    source:
                      type: string
                    builder:
                      type: string
                  title: CodeInfoResponse contains code meta data from CodeInfo
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              QueryCodesResponse is the response type for the Query/Codes RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/wasm/v1beta1/code/{code_id}':
    get:
      summary: Code gets the binary code and metadata for a singe wasm code
      operationId: Code
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              code_info:
                type: object
                properties:
                  code_id:
                    type: string
                    format: uint64
                  creator:
                    type: string
                  data_hash:
                    type: string
                    format: byte
                  source:
                    type: string
                  builder:
                    type: string
                title: CodeInfoResponse contains code meta data from CodeInfo
              data:
                type: string
                format: byte
            title: >-
              QueryCodeResponse is the response type for the Query/Code RPC
              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: code_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/wasm/v1beta1/code/{code_id}/contracts':
    get:
      summary: ContractsByCode lists all smart contracts for a code id
      operationId: ContractsByCode
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              contract_infos:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    contract_info:
                      type: object
                      properties:
                        code_id:
                          type: string
                          format: uint64
                          title: CodeID is the reference to the stored Wasm code
                        creator:
                          type: string
                          title: >-
                            Creator address who initially instantiated the
                            contract
                        admin:
                          type: string
                          title: >-
                            Admin is an optional address that can execute
                            migrations
                        label:
                          type: string
                          description: >-
                            Label is optional metadata to be stored with a
                            contract instance.
                        created:
                          title: >-
                            Created Tx position when the contract was
                            instantiated.

                            This data should kept internal and not be exposed
                            via query results. Just use for sorting
                          type: object
                          properties:
                            block_height:
                              type: string
                              format: uint64
                              title: >-
                                BlockHeight is the block the contract was
                                created at
                            tx_index:
                              type: string
                              format: uint64
                              title: >-
                                TxIndex is a monotonic counter within the block
                                (actual transaction index, or gas consumed)
                          description: >-
                            AbsoluteTxPosition is a unique transaction position
                            that allows for global ordering of transactions.
                      title: ContractInfo stores a WASM contract instance
                  title: >-
                    ContractInfoWithAddress adds the address (key) to the
                    ContractInfo representation
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              QueryContractsByCodeResponse is the response type for the
              Query/ContractsByCode RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: code_id
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/wasm/v1beta1/contract/{address}':
    get:
      summary: ContractInfo gets the contract meta data
      operationId: ContractInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address:
                type: string
                title: address is the address of the contract
              contract_info:
                type: object
                properties:
                  code_id:
                    type: string
                    format: uint64
                    title: CodeID is the reference to the stored Wasm code
                  creator:
                    type: string
                    title: Creator address who initially instantiated the contract
                  admin:
                    type: string
                    title: Admin is an optional address that can execute migrations
                  label:
                    type: string
                    description: >-
                      Label is optional metadata to be stored with a contract
                      instance.
                  created:
                    title: >-
                      Created Tx position when the contract was instantiated.

                      This data should kept internal and not be exposed via
                      query results. Just use for sorting
                    type: object
                    properties:
                      block_height:
                        type: string
                        format: uint64
                        title: BlockHeight is the block the contract was created at
                      tx_index:
                        type: string
                        format: uint64
                        title: >-
                          TxIndex is a monotonic counter within the block
                          (actual transaction index, or gas consumed)
                    description: >-
                      AbsoluteTxPosition is a unique transaction position that
                      allows for global ordering of transactions.
                title: ContractInfo stores a WASM contract instance
            title: >-
              QueryContractInfoResponse is the response type for the
              Query/ContractInfo RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address of the contract to query
          in: path
          required: true
          type: string
      tags:
        - Query
  '/wasm/v1beta1/contract/{address}/history':
    get:
      summary: ContractHistory gets the contract code history
      operationId: ContractHistory
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              entries:
                type: array
                items:
                  type: object
                  properties:
                    operation:
                      type: string
                      enum:
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
                      default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                      description: >-
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
                        ContractCodeHistoryOperationTypeUnspecified placeholder
                        for empty value
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
                      title: >-
                        ContractCodeHistoryOperationType actions that caused a
                        code change
                    code_id:
                      type: string
                      format: uint64
                      title: CodeID is the reference to the stored WASM code
                    updated:
                      description: Updated Tx position when the operation was executed.
                      type: object
                      properties:
                        block_height:
                          type: string
                          format: uint64
                          title: BlockHeight is the block the contract was created at
                        tx_index:
                          type: string
                          format: uint64
                          title: >-
                            TxIndex is a monotonic counter within the block
                            (actual transaction index, or gas consumed)
                    msg:
                      type: string
                      format: byte
                  description: ContractCodeHistoryEntry metadata to a contract.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              QueryContractHistoryResponse is the response type for the
              Query/ContractHistory RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address of the contract to query
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/wasm/v1beta1/contract/{address}/raw/{query_data}':
    get:
      summary: RawContractState gets single key from the raw store data of a contract
      operationId: RawContractState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              data:
                type: string
                format: byte
                title: Data contains the raw store data
            title: >-
              QueryRawContractStateResponse is the response type for the
              Query/RawContractState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address of the contract
          in: path
          required: true
          type: string
        - name: query_data
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
  '/wasm/v1beta1/contract/{address}/smart/{query_data}':
    get:
      summary: SmartContractState get smart query result from the contract
      operationId: SmartContractState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              data:
                type: string
                format: byte
                title: Data contains the json data returned from the smart contract
            title: >-
              QuerySmartContractStateResponse is the response type for the
              Query/SmartContractState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address of the contract
          in: path
          required: true
          type: string
        - name: query_data
          description: QueryData contains the query data passed to the contract
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
  '/wasm/v1beta1/contract/{address}/state':
    get:
      summary: AllContractState gets all raw store data for a single contract
      operationId: AllContractState
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              models:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      format: byte
                      title: hex-encode key to read it better (this is often ascii)
                    value:
                      type: string
                      format: byte
                      title: base64-encode raw value
                  title: Model is a struct that holds a KV pair
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              QueryAllContractStateResponse is the response type for the
              Query/AllContractState RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address of the contract
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
securityDefinitions:
  kms:
    type: basic
definitions:
  CheckTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
            value:
              type: string
    example:
      code: 0
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ''
        - ''
  DeliverTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
            value:
              type: string
    example:
      code: 5
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ''
        - ''
  BroadcastTxCommitResult:
    type: object
    properties:
      check_tx:
        type: object
        properties:
          code:
            type: integer
          data:
            type: string
          gas_used:
            type: integer
          gas_wanted:
            type: integer
          info:
            type: string
          log:
            type: string
          tags:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                value:
                  type: string
        example:
          code: 0
          data: data
          log: log
          gas_used: 5000
          gas_wanted: 10000
          info: info
          tags:
            - ''
            - ''
      deliver_tx:
        type: object
        properties:
          code:
            type: integer
          data:
            type: string
          gas_used:
            type: integer
          gas_wanted:
            type: integer
          info:
            type: string
          log:
            type: string
          tags:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                value:
                  type: string
        example:
          code: 5
          data: data
          log: log
          gas_used: 5000
          gas_wanted: 10000
          info: info
          tags:
            - ''
            - ''
      hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      height:
        type: integer
  KVPair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Msg:
    type: string
  Address:
    type: string
    description: bech32 encoded address
    example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
  ValidatorAddress:
    type: string
    description: bech32 encoded address
    example: iva1sltcyjm5k0edlg59t47lsyw8gtgc3nudrwey98
  Coin:
    type: object
    properties:
      denom:
        type: string
        example: stake
      amount:
        type: string
        example: '50'
  Hash:
    type: string
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
  TxQuery:
    type: object
    properties:
      hash:
        type: string
        example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
      height:
        type: number
        example: 368
      tx:
        type: object
        properties:
          msg:
            type: array
            items:
              type: string
          fee:
            type: object
            properties:
              gas:
                type: string
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: stake
                    amount:
                      type: string
                      example: '50'
          memo:
            type: string
          signature:
            type: object
            properties:
              signature:
                type: string
                example: >-
                  MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
              pub_key:
                type: object
                properties:
                  type:
                    type: string
                    example: tendermint/PubKeySecp256k1
                  value:
                    type: string
                    example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
              account_number:
                type: string
                example: '0'
              sequence:
                type: string
                example: '0'
      result:
        type: object
        properties:
          log:
            type: string
          gas_wanted:
            type: string
            example: '200000'
          gas_used:
            type: string
            example: '26354'
          tags:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                value:
                  type: string
  PaginatedQueryTxs:
    type: object
    properties:
      total_count:
        type: number
        example: 1
      count:
        type: number
        example: 1
      page_number:
        type: number
        example: 1
      page_total:
        type: number
        example: 1
      limit:
        type: number
        example: 30
      txs:
        type: array
        items:
          type: object
          properties:
            hash:
              type: string
              example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
            height:
              type: number
              example: 368
            tx:
              type: object
              properties:
                msg:
                  type: array
                  items:
                    type: string
                fee:
                  type: object
                  properties:
                    gas:
                      type: string
                    amount:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: stake
                          amount:
                            type: string
                            example: '50'
                memo:
                  type: string
                signature:
                  type: object
                  properties:
                    signature:
                      type: string
                      example: >-
                        MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                    pub_key:
                      type: object
                      properties:
                        type:
                          type: string
                          example: tendermint/PubKeySecp256k1
                        value:
                          type: string
                          example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                    account_number:
                      type: string
                      example: '0'
                    sequence:
                      type: string
                      example: '0'
            result:
              type: object
              properties:
                log:
                  type: string
                gas_wanted:
                  type: string
                  example: '200000'
                gas_used:
                  type: string
                  example: '26354'
                tags:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                      value:
                        type: string
  StdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          type: string
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  example: stake
                amount:
                  type: string
                  example: '50'
      memo:
        type: string
      signature:
        type: object
        properties:
          signature:
            type: string
            example: >-
              MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
          pub_key:
            type: object
            properties:
              type:
                type: string
                example: tendermint/PubKeySecp256k1
              value:
                type: string
                example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
          account_number:
            type: string
            example: '0'
          sequence:
            type: string
            example: '0'
  BlockID:
    type: object
    properties:
      hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      parts:
        type: object
        properties:
          total:
            type: number
            example: 0
          hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
  BlockHeader:
    type: object
    properties:
      chain_id:
        type: string
        example: IRITA-2
      height:
        type: number
        example: 1
      time:
        type: string
        example: '2017-12-30T05:53:09.287+01:00'
      num_txs:
        type: number
        example: 0
      last_block_id:
        type: object
        properties:
          hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          parts:
            type: object
            properties:
              total:
                type: number
                example: 0
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
      total_txs:
        type: number
        example: 35
      last_commit_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      data_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      validators_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      next_validators_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      consensus_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      app_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      last_results_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      evidence_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      proposer_address:
        type: string
        description: bech32 encoded address
        example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
      version:
        type: object
        properties:
          block:
            type: string
            example: 10
          app:
            type: string
            example: 0
  Block:
    type: object
    properties:
      header:
        type: object
        properties:
          chain_id:
            type: string
            example: IRITA-2
          height:
            type: number
            example: 1
          time:
            type: string
            example: '2017-12-30T05:53:09.287+01:00'
          num_txs:
            type: number
            example: 0
          last_block_id:
            type: object
            properties:
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              parts:
                type: object
                properties:
                  total:
                    type: number
                    example: 0
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
          total_txs:
            type: number
            example: 35
          last_commit_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          data_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          validators_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          next_validators_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          consensus_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          app_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          last_results_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          evidence_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          proposer_address:
            type: string
            description: bech32 encoded address
            example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
          version:
            type: object
            properties:
              block:
                type: string
                example: 10
              app:
                type: string
                example: 0
      txs:
        type: array
        items:
          type: string
      evidence:
        type: array
        items:
          type: string
      last_commit:
        type: object
        properties:
          block_id:
            type: object
            properties:
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              parts:
                type: object
                properties:
                  total:
                    type: number
                    example: 0
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
          precommits:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                validator_index:
                  type: string
                  example: '0'
                height:
                  type: string
                  example: '0'
                round:
                  type: string
                  example: '0'
                timestamp:
                  type: string
                  example: '2017-12-30T05:53:09.287+01:00'
                type:
                  type: number
                  example: 2
                block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                    parts:
                      type: object
                      properties:
                        total:
                          type: number
                          example: 0
                        hash:
                          type: string
                          example: EE5F3404034C524501629B56E0DDC38FAD651F04
                signature:
                  type: string
                  example: >-
                    7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
  BlockQuery:
    type: object
    properties:
      block_meta:
        type: object
        properties:
          header:
            type: object
            properties:
              chain_id:
                type: string
                example: IRITA-2
              height:
                type: number
                example: 1
              time:
                type: string
                example: '2017-12-30T05:53:09.287+01:00'
              num_txs:
                type: number
                example: 0
              last_block_id:
                type: object
                properties:
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  parts:
                    type: object
                    properties:
                      total:
                        type: number
                        example: 0
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
              total_txs:
                type: number
                example: 35
              last_commit_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              data_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              validators_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              next_validators_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              consensus_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              app_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              last_results_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              evidence_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              proposer_address:
                type: string
                description: bech32 encoded address
                example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
              version:
                type: object
                properties:
                  block:
                    type: string
                    example: 10
                  app:
                    type: string
                    example: 0
          block_id:
            type: object
            properties:
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              parts:
                type: object
                properties:
                  total:
                    type: number
                    example: 0
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
      block:
        type: object
        properties:
          header:
            type: object
            properties:
              chain_id:
                type: string
                example: IRITA-2
              height:
                type: number
                example: 1
              time:
                type: string
                example: '2017-12-30T05:53:09.287+01:00'
              num_txs:
                type: number
                example: 0
              last_block_id:
                type: object
                properties:
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  parts:
                    type: object
                    properties:
                      total:
                        type: number
                        example: 0
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
              total_txs:
                type: number
                example: 35
              last_commit_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              data_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              validators_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              next_validators_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              consensus_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              app_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              last_results_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              evidence_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              proposer_address:
                type: string
                description: bech32 encoded address
                example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
              version:
                type: object
                properties:
                  block:
                    type: string
                    example: 10
                  app:
                    type: string
                    example: 0
          txs:
            type: array
            items:
              type: string
          evidence:
            type: array
            items:
              type: string
          last_commit:
            type: object
            properties:
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  parts:
                    type: object
                    properties:
                      total:
                        type: number
                        example: 0
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
              precommits:
                type: array
                items:
                  type: object
                  properties:
                    validator_address:
                      type: string
                    validator_index:
                      type: string
                      example: '0'
                    height:
                      type: string
                      example: '0'
                    round:
                      type: string
                      example: '0'
                    timestamp:
                      type: string
                      example: '2017-12-30T05:53:09.287+01:00'
                    type:
                      type: number
                      example: 2
                    block_id:
                      type: object
                      properties:
                        hash:
                          type: string
                          example: EE5F3404034C524501629B56E0DDC38FAD651F04
                        parts:
                          type: object
                          properties:
                            total:
                              type: number
                              example: 0
                            hash:
                              type: string
                              example: EE5F3404034C524501629B56E0DDC38FAD651F04
                    signature:
                      type: string
                      example: >-
                        7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
  DelegationDelegatorReward:
    type: object
    properties:
      validator_address:
        type: string
        description: bech32 encoded address
        example: iva1sltcyjm5k0edlg59t47lsyw8gtgc3nudrwey98
      reward:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: stake
            amount:
              type: string
              example: '50'
  DelegatorTotalRewards:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            validator_address:
              type: string
              description: bech32 encoded address
              example: iva1sltcyjm5k0edlg59t47lsyw8gtgc3nudrwey98
            reward:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: stake
                  amount:
                    type: string
                    example: '50'
      total:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: stake
            amount:
              type: string
              example: '50'
  BaseReq:
    type: object
    properties:
      from:
        type: string
        example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
        description: Sender address or Keybase name to generate a transaction
      memo:
        type: string
        example: "Sent via Cosmos Voyager \U0001F680"
      chain_id:
        type: string
        example: Cosmos-Hub
      account_number:
        type: string
        example: '0'
      sequence:
        type: string
        example: '1'
      gas:
        type: string
        example: '200000'
      gas_adjustment:
        type: string
        example: '1.2'
      fees:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: stake
            amount:
              type: string
              example: '50'
      simulate:
        type: boolean
        example: false
        description: >-
          Estimate gas for a transaction (cannot be used in conjunction with
          generate_only)
  TendermintValidator:
    type: object
    properties:
      address:
        type: string
        description: bech32 encoded address
        example: iva1sltcyjm5k0edlg59t47lsyw8gtgc3nudrwey98
      pub_key:
        type: string
        example: >-
          icp1zcjduepqwhwqn4h5v6mqa7k3kmy7cjzchsx5ptsrqaulwrgfmghy3k9jtdzs6rdddm
      voting_power:
        type: string
        example: '1000'
      proposer_priority:
        type: string
        example: '1000'
  TextProposal:
    type: object
    properties:
      proposal_id:
        type: integer
      title:
        type: string
      description:
        type: string
      proposal_type:
        type: string
      proposal_status:
        type: string
      final_tally_result:
        type: object
        properties:
          'yes':
            type: string
            example: '0.0000000000'
          abstain:
            type: string
            example: '0.0000000000'
          'no':
            type: string
            example: '0.0000000000'
          no_with_veto:
            type: string
            example: '0.0000000000'
      submit_time:
        type: string
      total_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: stake
            amount:
              type: string
              example: '50'
      voting_start_time:
        type: string
  Proposer:
    type: object
    properties:
      proposal_id:
        type: string
      proposer:
        type: string
  Deposit:
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: stake
            amount:
              type: string
              example: '50'
      proposal_id:
        type: string
      depositor:
        type: string
        description: bech32 encoded address
        example: iaa1sltcyjm5k0edlg59t47lsyw8gtgc3nudklntcq
  TallyResult:
    type: object
    properties:
      'yes':
        type: string
        example: '0.0000000000'
      abstain:
        type: string
        example: '0.0000000000'
      'no':
        type: string
        example: '0.0000000000'
      no_with_veto:
        type: string
        example: '0.0000000000'
  Vote:
    type: object
    properties:
      voter:
        type: string
      proposal_id:
        type: string
      option:
        type: string
  Validator:
    type: object
    properties:
      operator_address:
        type: string
        description: bech32 encoded address
        example: iva1sltcyjm5k0edlg59t47lsyw8gtgc3nudrwey98
      consensus_pubkey:
        type: string
        example: >-
          icp1zcjduepqwhwqn4h5v6mqa7k3kmy7cjzchsx5ptsrqaulwrgfmghy3k9jtdzs6rdddm
      jailed:
        type: boolean
      status:
        type: integer
      tokens:
        type: string
      delegator_shares:
        type: string
      description:
        type: object
        properties:
          moniker:
            type: string
          identity:
            type: string
          website:
            type: string
          security_contact:
            type: string
          details:
            type: string
      bond_height:
        type: string
        example: '0'
      bond_intra_tx_counter:
        type: integer
        example: 0
      unbonding_height:
        type: string
        example: '0'
      unbonding_time:
        type: string
        example: '1970-01-01T00:00:00Z'
      commission:
        type: object
        properties:
          rate:
            type: string
            example: '0'
          max_rate:
            type: string
            example: '0'
          max_change_rate:
            type: string
            example: '0'
          update_time:
            type: string
            example: '1970-01-01T00:00:00Z'
  Delegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      shares:
        type: string
      balance:
        type: object
        properties:
          denom:
            type: string
            example: stake
          amount:
            type: string
            example: '50'
  UnbondingDelegationPair:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      entries:
        type: array
        items:
          type: object
          properties:
            initial_balance:
              type: string
            balance:
              type: string
            creation_height:
              type: string
            min_time:
              type: string
  UnbondingEntries:
    type: object
    properties:
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: string
      min_time:
        type: string
  UnbondingDelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: integer
      min_time:
        type: integer
  Redelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_src_address:
        type: string
      validator_dst_address:
        type: string
      entries:
        type: array
        items:
          $ref: '#/definitions/Redelegation'
  RedelegationEntry:
    type: object
    properties:
      creation_height:
        type: integer
      completion_time:
        type: integer
      initial_balance:
        type: string
      balance:
        type: string
      shares_dst:
        type: string
  ValidatorDistInfo:
    type: object
    properties:
      operator_address:
        type: string
        description: bech32 encoded address
        example: iva1sltcyjm5k0edlg59t47lsyw8gtgc3nudrwey98
      self_bond_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: stake
            amount:
              type: string
              example: '50'
      val_commission:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: stake
            amount:
              type: string
              example: '50'
  PublicKey:
    type: object
    properties:
      type:
        type: string
      value:
        type: string
  SigningInfo:
    type: object
    properties:
      start_height:
        type: string
      index_offset:
        type: string
      jailed_until:
        type: string
      missed_blocks_counter:
        type: string
  ParamChange:
    type: object
    properties:
      subspace:
        type: string
        example: staking
      key:
        type: string
        example: MaxValidators
      subkey:
        type: string
        example: ''
      value:
        type: object
  Supply:
    type: object
    properties:
      total:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: stake
            amount:
              type: string
              example: '50'
  cosmos.base.abci.v1beta1.ABCIMessageLog:
    type: object
    properties:
      msg_index:
        type: integer
        format: int64
      log:
        type: string
      events:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
            attributes:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
                description: >-
                  Attribute defines an attribute wrapper where the key and value
                  are

                  strings instead of raw bytes.
          description: |-
            StringEvent defines en Event object wrapper where all the attributes
            contain key/value pairs that are strings instead of raw bytes.
        description: |-
          Events contains a slice of Event objects that were emitted during some
          execution.
    description: >-
      ABCIMessageLog defines a structure containing an indexed tx ABCI message
      log.
  cosmos.base.abci.v1beta1.Attribute:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
    description: |-
      Attribute defines an attribute wrapper where the key and value are
      strings instead of raw bytes.
  cosmos.base.abci.v1beta1.GasInfo:
    type: object
    properties:
      gas_wanted:
        type: string
        format: uint64
        description: GasWanted is the maximum units of work we allow this tx to perform.
      gas_used:
        type: string
        format: uint64
        description: GasUsed is the amount of gas actually consumed.
    description: GasInfo defines tx execution gas context.
  cosmos.base.abci.v1beta1.Result:
    type: object
    properties:
      data:
        type: string
        format: byte
        description: >-
          Data is any data returned from message or handler execution. It MUST
          be

          length prefixed in order to separate data from multiple message
          executions.
      log:
        type: string
        description: Log contains the log information from message or handler execution.
      events:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
            attributes:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                    format: byte
                  value:
                    type: string
                    format: byte
                  index:
                    type: boolean
                description: >-
                  EventAttribute is a single key-value pair, associated with an
                  event.
          description: >-
            Event allows application developers to attach additional information
            to

            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and
            ResponseDeliverTx.

            Later, transactions may be queried using these events.
        description: >-
          Events contains a slice of Event objects that were emitted during
          message

          or handler execution.
    description: Result is the union of ResponseFormat and ResponseCheckTx.
  cosmos.base.abci.v1beta1.StringEvent:
    type: object
    properties:
      type:
        type: string
      attributes:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
            value:
              type: string
          description: |-
            Attribute defines an attribute wrapper where the key and value are
            strings instead of raw bytes.
    description: |-
      StringEvent defines en Event object wrapper where all the attributes
      contain key/value pairs that are strings instead of raw bytes.
  cosmos.base.abci.v1beta1.TxResponse:
    type: object
    properties:
      height:
        type: string
        format: int64
        title: The block height
      txhash:
        type: string
        description: The transaction hash.
      codespace:
        type: string
        title: Namespace for the Code
      code:
        type: integer
        format: int64
        description: Response code.
      data:
        type: string
        description: 'Result bytes, if any.'
      raw_log:
        type: string
        description: |-
          The output of the application's logger (raw string). May be
          non-deterministic.
      logs:
        type: array
        items:
          type: object
          properties:
            msg_index:
              type: integer
              format: int64
            log:
              type: string
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      description: >-
                        Attribute defines an attribute wrapper where the key and
                        value are

                        strings instead of raw bytes.
                description: >-
                  StringEvent defines en Event object wrapper where all the
                  attributes

                  contain key/value pairs that are strings instead of raw bytes.
              description: >-
                Events contains a slice of Event objects that were emitted
                during some

                execution.
          description: >-
            ABCIMessageLog defines a structure containing an indexed tx ABCI
            message log.
        description: >-
          The output of the application's logger (typed). May be
          non-deterministic.
      info:
        type: string
        description: Additional information. May be non-deterministic.
      gas_wanted:
        type: string
        format: int64
        description: Amount of gas requested for transaction.
      gas_used:
        type: string
        format: int64
        description: Amount of gas consumed by transaction.
      tx:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      timestamp:
        type: string
        description: >-
          Time of the previous block. For heights > 1, it's the weighted median
          of

          the timestamps of the valid votes in the block.LastCommit. For height
          == 1,

          it's genesis time.
    description: >-
      TxResponse defines a structure containing relevant tx data and metadata.
      The

      tags are stringified and the log is JSON decoded.
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        title: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  cosmos.crypto.multisig.v1beta1.CompactBitArray:
    type: object
    properties:
      extra_bits_stored:
        type: integer
        format: int64
      elems:
        type: string
        format: byte
    description: |-
      CompactBitArray is an implementation of a space efficient bit array.
      This is used to ensure that the encoded data takes up a minimal amount of
      space after proto encoding.
      This is not thread safe, and is not intended for concurrent usage.
  cosmos.tx.signing.v1beta1.SignMode:
    type: string
    enum:
      - SIGN_MODE_UNSPECIFIED
      - SIGN_MODE_DIRECT
      - SIGN_MODE_TEXTUAL
      - SIGN_MODE_LEGACY_AMINO_JSON
    default: SIGN_MODE_UNSPECIFIED
    description: |-
      SignMode represents a signing mode with its own security guarantees.

       - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
      rejected
       - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
      verified with raw bytes from Tx
       - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
      human-readable textual representation on top of the binary representation
      from SIGN_MODE_DIRECT
       - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
      Amino JSON and will be removed in the future
  cosmos.tx.v1beta1.AuthInfo:
    type: object
    properties:
      signer_infos:
        type: array
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.SignerInfo'
        description: >-
          signer_infos defines the signing modes for the required signers. The
          number

          and order of elements must match the required signers from TxBody's

          messages. The first element is the primary signer and the one which
          pays

          the fee.
      fee:
        description: >-
          Fee is the fee and gas limit for the transaction. The first signer is
          the

          primary signer and the one which pays the fee. The fee can be
          calculated

          based on the cost of evaluating the body and doing signature
          verification

          of the signers. This can be estimated via simulation.
        type: object
        properties:
          amount:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: amount is the amount of coins to be paid as a fee
          gas_limit:
            type: string
            format: uint64
            title: >-
              gas_limit is the maximum gas that can be used in transaction
              processing

              before an out of gas error occurs
          payer:
            type: string
            description: >-
              if unset, the first signer is responsible for paying the fees. If
              set, the specified account must pay the fees.

              the payer must be a tx signer (and thus have signed this field in
              AuthInfo).

              setting this field does *not* change the ordering of required
              signers for the transaction.
          granter:
            type: string
            title: >-
              if set, the fee payer (either the first signer or the value of the
              payer field) requests that a fee grant be used

              to pay fees instead of the fee payer's own balance. If an
              appropriate fee grant does not exist or the chain does

              not support fee grants, this will fail
    description: |-
      AuthInfo describes the fee and signer modes that are used to sign a
      transaction.
  cosmos.tx.v1beta1.BroadcastMode:
    type: string
    enum:
      - BROADCAST_MODE_UNSPECIFIED
      - BROADCAST_MODE_BLOCK
      - BROADCAST_MODE_SYNC
      - BROADCAST_MODE_ASYNC
    default: BROADCAST_MODE_UNSPECIFIED
    description: >-
      BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
      method.

       - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
       - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
      the tx to be committed in a block.
       - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
      a CheckTx execution response only.
       - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
      immediately.
  cosmos.tx.v1beta1.BroadcastTxRequest:
    type: object
    properties:
      tx_bytes:
        type: string
        format: byte
        description: tx_bytes is the raw transaction.
      mode:
        type: string
        enum:
          - BROADCAST_MODE_UNSPECIFIED
          - BROADCAST_MODE_BLOCK
          - BROADCAST_MODE_SYNC
          - BROADCAST_MODE_ASYNC
        default: BROADCAST_MODE_UNSPECIFIED
        description: >-
          BroadcastMode specifies the broadcast mode for the TxService.Broadcast
          RPC method.

           - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
           - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
          the tx to be committed in a block.
           - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
          a CheckTx execution response only.
           - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
          immediately.
    description: |-
      BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
      RPC method.
  cosmos.tx.v1beta1.BroadcastTxResponse:
    type: object
    properties:
      tx_response:
        type: object
        properties:
          height:
            type: string
            format: int64
            title: The block height
          txhash:
            type: string
            description: The transaction hash.
          codespace:
            type: string
            title: Namespace for the Code
          code:
            type: integer
            format: int64
            description: Response code.
          data:
            type: string
            description: 'Result bytes, if any.'
          raw_log:
            type: string
            description: |-
              The output of the application's logger (raw string). May be
              non-deterministic.
          logs:
            type: array
            items:
              type: object
              properties:
                msg_index:
                  type: integer
                  format: int64
                log:
                  type: string
                events:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      attributes:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          description: >-
                            Attribute defines an attribute wrapper where the key
                            and value are

                            strings instead of raw bytes.
                    description: >-
                      StringEvent defines en Event object wrapper where all the
                      attributes

                      contain key/value pairs that are strings instead of raw
                      bytes.
                  description: >-
                    Events contains a slice of Event objects that were emitted
                    during some

                    execution.
              description: >-
                ABCIMessageLog defines a structure containing an indexed tx ABCI
                message log.
            description: >-
              The output of the application's logger (typed). May be
              non-deterministic.
          info:
            type: string
            description: Additional information. May be non-deterministic.
          gas_wanted:
            type: string
            format: int64
            description: Amount of gas requested for transaction.
          gas_used:
            type: string
            format: int64
            description: Amount of gas consumed by transaction.
          tx:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          timestamp:
            type: string
            description: >-
              Time of the previous block. For heights > 1, it's the weighted
              median of

              the timestamps of the valid votes in the block.LastCommit. For
              height == 1,

              it's genesis time.
        description: >-
          TxResponse defines a structure containing relevant tx data and
          metadata. The

          tags are stringified and the log is JSON decoded.
    description: |-
      BroadcastTxResponse is the response type for the
      Service.BroadcastTx method.
  cosmos.tx.v1beta1.Fee:
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: amount is the amount of coins to be paid as a fee
      gas_limit:
        type: string
        format: uint64
        title: >-
          gas_limit is the maximum gas that can be used in transaction
          processing

          before an out of gas error occurs
      payer:
        type: string
        description: >-
          if unset, the first signer is responsible for paying the fees. If set,
          the specified account must pay the fees.

          the payer must be a tx signer (and thus have signed this field in
          AuthInfo).

          setting this field does *not* change the ordering of required signers
          for the transaction.
      granter:
        type: string
        title: >-
          if set, the fee payer (either the first signer or the value of the
          payer field) requests that a fee grant be used

          to pay fees instead of the fee payer's own balance. If an appropriate
          fee grant does not exist or the chain does

          not support fee grants, this will fail
    description: >-
      Fee includes the amount of coins paid in fees and the maximum

      gas to be used by the transaction. The ratio yields an effective
      "gasprice",

      which must be above some miminum to be accepted into the mempool.
  cosmos.tx.v1beta1.GetTxResponse:
    type: object
    properties:
      tx:
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        description: tx is the queried transaction.
      tx_response:
        type: object
        properties:
          height:
            type: string
            format: int64
            title: The block height
          txhash:
            type: string
            description: The transaction hash.
          codespace:
            type: string
            title: Namespace for the Code
          code:
            type: integer
            format: int64
            description: Response code.
          data:
            type: string
            description: 'Result bytes, if any.'
          raw_log:
            type: string
            description: |-
              The output of the application's logger (raw string). May be
              non-deterministic.
          logs:
            type: array
            items:
              type: object
              properties:
                msg_index:
                  type: integer
                  format: int64
                log:
                  type: string
                events:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      attributes:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          description: >-
                            Attribute defines an attribute wrapper where the key
                            and value are

                            strings instead of raw bytes.
                    description: >-
                      StringEvent defines en Event object wrapper where all the
                      attributes

                      contain key/value pairs that are strings instead of raw
                      bytes.
                  description: >-
                    Events contains a slice of Event objects that were emitted
                    during some

                    execution.
              description: >-
                ABCIMessageLog defines a structure containing an indexed tx ABCI
                message log.
            description: >-
              The output of the application's logger (typed). May be
              non-deterministic.
          info:
            type: string
            description: Additional information. May be non-deterministic.
          gas_wanted:
            type: string
            format: int64
            description: Amount of gas requested for transaction.
          gas_used:
            type: string
            format: int64
            description: Amount of gas consumed by transaction.
          tx:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          timestamp:
            type: string
            description: >-
              Time of the previous block. For heights > 1, it's the weighted
              median of

              the timestamps of the valid votes in the block.LastCommit. For
              height == 1,

              it's genesis time.
        description: >-
          TxResponse defines a structure containing relevant tx data and
          metadata. The

          tags are stringified and the log is JSON decoded.
    description: GetTxResponse is the response type for the Service.GetTx method.
  cosmos.tx.v1beta1.GetTxsEventResponse:
    type: object
    properties:
      txs:
        type: array
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        description: txs is the list of queried transactions.
      tx_responses:
        type: array
        items:
          type: object
          properties:
            height:
              type: string
              format: int64
              title: The block height
            txhash:
              type: string
              description: The transaction hash.
            codespace:
              type: string
              title: Namespace for the Code
            code:
              type: integer
              format: int64
              description: Response code.
            data:
              type: string
              description: 'Result bytes, if any.'
            raw_log:
              type: string
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
            logs:
              type: array
              items:
                type: object
                properties:
                  msg_index:
                    type: integer
                    format: int64
                  log:
                    type: string
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            description: >-
                              Attribute defines an attribute wrapper where the
                              key and value are

                              strings instead of raw bytes.
                      description: >-
                        StringEvent defines en Event object wrapper where all
                        the attributes

                        contain key/value pairs that are strings instead of raw
                        bytes.
                    description: >-
                      Events contains a slice of Event objects that were emitted
                      during some

                      execution.
                description: >-
                  ABCIMessageLog defines a structure containing an indexed tx
                  ABCI message log.
              description: >-
                The output of the application's logger (typed). May be
                non-deterministic.
            info:
              type: string
              description: Additional information. May be non-deterministic.
            gas_wanted:
              type: string
              format: int64
              description: Amount of gas requested for transaction.
            gas_used:
              type: string
              format: int64
              description: Amount of gas consumed by transaction.
            tx:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            timestamp:
              type: string
              description: >-
                Time of the previous block. For heights > 1, it's the weighted
                median of

                the timestamps of the valid votes in the block.LastCommit. For
                height == 1,

                it's genesis time.
          description: >-
            TxResponse defines a structure containing relevant tx data and
            metadata. The

            tags are stringified and the log is JSON decoded.
        description: tx_responses is the list of queried TxResponses.
      pagination:
        description: pagination defines an pagination for the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      GetTxsEventResponse is the response type for the Service.TxsByEvents
      RPC method.
  cosmos.tx.v1beta1.ModeInfo:
    type: object
    properties:
      single:
        title: single represents a single signer
        type: object
        properties:
          mode:
            title: mode is the signing mode of the single signer
            type: string
            enum:
              - SIGN_MODE_UNSPECIFIED
              - SIGN_MODE_DIRECT
              - SIGN_MODE_TEXTUAL
              - SIGN_MODE_LEGACY_AMINO_JSON
            default: SIGN_MODE_UNSPECIFIED
            description: >-
              SignMode represents a signing mode with its own security
              guarantees.

               - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
              rejected
               - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
              verified with raw bytes from Tx
               - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
              human-readable textual representation on top of the binary
              representation

              from SIGN_MODE_DIRECT
               - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
              Amino JSON and will be removed in the future
      multi:
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo.Multi'
        title: multi represents a nested multisig signer
    description: ModeInfo describes the signing mode of a single or nested multisig signer.
  cosmos.tx.v1beta1.ModeInfo.Multi:
    type: object
    properties:
      bitarray:
        title: bitarray specifies which keys within the multisig are signing
        type: object
        properties:
          extra_bits_stored:
            type: integer
            format: int64
          elems:
            type: string
            format: byte
        description: >-
          CompactBitArray is an implementation of a space efficient bit array.

          This is used to ensure that the encoded data takes up a minimal amount
          of

          space after proto encoding.

          This is not thread safe, and is not intended for concurrent usage.
      mode_infos:
        type: array
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
        title: |-
          mode_infos is the corresponding modes of the signers of the multisig
          which could include nested multisig public keys
    title: Multi is the mode info for a multisig public key
  cosmos.tx.v1beta1.ModeInfo.Single:
    type: object
    properties:
      mode:
        title: mode is the signing mode of the single signer
        type: string
        enum:
          - SIGN_MODE_UNSPECIFIED
          - SIGN_MODE_DIRECT
          - SIGN_MODE_TEXTUAL
          - SIGN_MODE_LEGACY_AMINO_JSON
        default: SIGN_MODE_UNSPECIFIED
        description: >-
          SignMode represents a signing mode with its own security guarantees.

           - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
          rejected
           - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
          verified with raw bytes from Tx
           - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
          human-readable textual representation on top of the binary
          representation

          from SIGN_MODE_DIRECT
           - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
          Amino JSON and will be removed in the future
    title: |-
      Single is the mode info for a single signer. It is structured as a message
      to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
      future
  cosmos.tx.v1beta1.OrderBy:
    type: string
    enum:
      - ORDER_BY_UNSPECIFIED
      - ORDER_BY_ASC
      - ORDER_BY_DESC
    default: ORDER_BY_UNSPECIFIED
    description: >-
      - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting
      order. OrderBy defaults to ASC in this case.
       - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
       - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
    title: OrderBy defines the sorting order
  cosmos.tx.v1beta1.SignerInfo:
    type: object
    properties:
      public_key:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      mode_info:
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
        title: |-
          mode_info describes the signing mode of the signer and is a nested
          structure to support nested multisig pubkey's
      sequence:
        type: string
        format: uint64
        description: >-
          sequence is the sequence of the account, which describes the

          number of committed transactions signed by a given address. It is used
          to

          prevent replay attacks.
    description: |-
      SignerInfo describes the public key and signing mode of a single top-level
      signer.
  cosmos.tx.v1beta1.SimulateRequest:
    type: object
    properties:
      tx:
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        description: tx is the transaction to simulate.
    description: |-
      SimulateRequest is the request type for the Service.Simulate
      RPC method.
  cosmos.tx.v1beta1.SimulateResponse:
    type: object
    properties:
      gas_info:
        description: gas_info is the information about gas used in the simulation.
        type: object
        properties:
          gas_wanted:
            type: string
            format: uint64
            description: >-
              GasWanted is the maximum units of work we allow this tx to
              perform.
          gas_used:
            type: string
            format: uint64
            description: GasUsed is the amount of gas actually consumed.
      result:
        description: result is the result of the simulation.
        type: object
        properties:
          data:
            type: string
            format: byte
            description: >-
              Data is any data returned from message or handler execution. It
              MUST be

              length prefixed in order to separate data from multiple message
              executions.
          log:
            type: string
            description: >-
              Log contains the log information from message or handler
              execution.
          events:
            type: array
            items:
              type: object
              properties:
                type:
                  type: string
                attributes:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                        format: byte
                      value:
                        type: string
                        format: byte
                      index:
                        type: boolean
                    description: >-
                      EventAttribute is a single key-value pair, associated with
                      an event.
              description: >-
                Event allows application developers to attach additional
                information to

                ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and
                ResponseDeliverTx.

                Later, transactions may be queried using these events.
            description: >-
              Events contains a slice of Event objects that were emitted during
              message

              or handler execution.
    description: |-
      SimulateResponse is the response type for the
      Service.SimulateRPC method.
  cosmos.tx.v1beta1.Tx:
    type: object
    properties:
      body:
        title: body is the processable content of the transaction
        type: object
        properties:
          messages:
            type: array
            items:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            description: >-
              messages is a list of messages to be executed. The required
              signers of

              those messages define the number and order of elements in
              AuthInfo's

              signer_infos and Tx's signatures. Each required signer address is
              added to

              the list only the first time it occurs.

              By convention, the first required signer (usually from the first
              message)

              is referred to as the primary signer and pays the fee for the
              whole

              transaction.
          memo:
            type: string
            title: memo is any arbitrary memo to be added to the transaction
          timeout_height:
            type: string
            format: uint64
            title: |-
              timeout is the block height after which this transaction will not
              be processed by the chain
          extension_options:
            type: array
            items:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            title: >-
              extension_options are arbitrary options that can be added by
              chains

              when the default options are not sufficient. If any of these are
              present

              and can't be handled, the transaction will be rejected
          non_critical_extension_options:
            type: array
            items:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            title: >-
              extension_options are arbitrary options that can be added by
              chains

              when the default options are not sufficient. If any of these are
              present

              and can't be handled, they will be ignored
        description: TxBody is the body of a transaction that all signers sign over.
      auth_info:
        $ref: '#/definitions/cosmos.tx.v1beta1.AuthInfo'
        title: |-
          auth_info is the authorization related content of the transaction,
          specifically signers, signer modes and fee
      signatures:
        type: array
        items:
          type: string
          format: byte
        description: >-
          signatures is a list of signatures that matches the length and order
          of

          AuthInfo's signer_infos to allow connecting signature meta information
          like

          public key and signing mode by position.
    description: Tx is the standard type used for broadcasting transactions.
  cosmos.tx.v1beta1.TxBody:
    type: object
    properties:
      messages:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        description: >-
          messages is a list of messages to be executed. The required signers of

          those messages define the number and order of elements in AuthInfo's

          signer_infos and Tx's signatures. Each required signer address is
          added to

          the list only the first time it occurs.

          By convention, the first required signer (usually from the first
          message)

          is referred to as the primary signer and pays the fee for the whole

          transaction.
      memo:
        type: string
        title: memo is any arbitrary memo to be added to the transaction
      timeout_height:
        type: string
        format: uint64
        title: |-
          timeout is the block height after which this transaction will not
          be processed by the chain
      extension_options:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        title: >-
          extension_options are arbitrary options that can be added by chains

          when the default options are not sufficient. If any of these are
          present

          and can't be handled, the transaction will be rejected
      non_critical_extension_options:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        title: >-
          extension_options are arbitrary options that can be added by chains

          when the default options are not sufficient. If any of these are
          present

          and can't be handled, they will be ignored
    description: TxBody is the body of a transaction that all signers sign over.
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: >-
          Must be a valid serialized protocol buffer of the above specified
          type.
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := ptypes.MarshalAny(foo)
           ...
           foo := &pb.Foo{}
           if err := ptypes.UnmarshalAny(any, foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".



      JSON

      ====

      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
  tendermint.abci.Event:
    type: object
    properties:
      type:
        type: string
      attributes:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              format: byte
            value:
              type: string
              format: byte
            index:
              type: boolean
          description: 'EventAttribute is a single key-value pair, associated with an event.'
    description: >-
      Event allows application developers to attach additional information to

      ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and
      ResponseDeliverTx.

      Later, transactions may be queried using these events.
  tendermint.abci.EventAttribute:
    type: object
    properties:
      key:
        type: string
        format: byte
      value:
        type: string
        format: byte
      index:
        type: boolean
    description: 'EventAttribute is a single key-value pair, associated with an event.'
  cosmos.auth.v1beta1.Params:
    type: object
    properties:
      max_memo_characters:
        type: string
        format: uint64
      tx_sig_limit:
        type: string
        format: uint64
      tx_size_cost_per_byte:
        type: string
        format: uint64
      sig_verify_cost_ed25519:
        type: string
        format: uint64
      sig_verify_cost_secp256k1:
        type: string
        format: uint64
      sig_verify_cost_sm2:
        type: string
        format: uint64
    description: Params defines the parameters for the auth module.
  cosmos.auth.v1beta1.QueryAccountResponse:
    type: object
    properties:
      account:
        description: account defines the account of the corresponding address.
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
    description: >-
      QueryAccountResponse is the response type for the Query/Account RPC
      method.
  cosmos.auth.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          max_memo_characters:
            type: string
            format: uint64
          tx_sig_limit:
            type: string
            format: uint64
          tx_size_cost_per_byte:
            type: string
            format: uint64
          sig_verify_cost_ed25519:
            type: string
            format: uint64
          sig_verify_cost_secp256k1:
            type: string
            format: uint64
          sig_verify_cost_sm2:
            type: string
            format: uint64
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.bank.v1beta1.DenomUnit:
    type: object
    properties:
      denom:
        type: string
        description: denom represents the string name of the given denom unit (e.g uatom).
      exponent:
        type: integer
        format: int64
        description: >-
          exponent represents power of 10 exponent that one must

          raise the base_denom to in order to equal the given DenomUnit's denom

          1 denom = 1^exponent base_denom

          (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom'
          with

          exponent = 6, thus: 1 atom = 10^6 uatom).
      aliases:
        type: array
        items:
          type: string
        title: aliases is a list of string aliases for the given denom
    description: |-
      DenomUnit represents a struct that describes a given
      denomination unit of the basic token.
  cosmos.bank.v1beta1.Metadata:
    type: object
    properties:
      description:
        type: string
      denom_units:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              description: >-
                denom represents the string name of the given denom unit (e.g
                uatom).
            exponent:
              type: integer
              format: int64
              description: >-
                exponent represents power of 10 exponent that one must

                raise the base_denom to in order to equal the given DenomUnit's
                denom

                1 denom = 1^exponent base_denom

                (e.g. with a base_denom of uatom, one can create a DenomUnit of
                'atom' with

                exponent = 6, thus: 1 atom = 10^6 uatom).
            aliases:
              type: array
              items:
                type: string
              title: aliases is a list of string aliases for the given denom
          description: |-
            DenomUnit represents a struct that describes a given
            denomination unit of the basic token.
        title: denom_units represents the list of DenomUnit's for a given coin
      base:
        type: string
        description: >-
          base represents the base denom (should be the DenomUnit with exponent
          = 0).
      display:
        type: string
        description: |-
          display indicates the suggested denom that should be
          displayed in clients.
    description: |-
      Metadata represents a struct that describes
      a basic token.
  cosmos.bank.v1beta1.Params:
    type: object
    properties:
      send_enabled:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          description: >-
            SendEnabled maps coin denom to a send_enabled status (whether a
            denom is

            sendable).
      default_send_enabled:
        type: boolean
    description: Params defines the parameters for the bank module.
  cosmos.bank.v1beta1.QueryAllBalancesResponse:
    type: object
    properties:
      balances:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: balances is the balances of all the coins.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAllBalancesResponse is the response type for the Query/AllBalances
      RPC

      method.
  cosmos.bank.v1beta1.QueryBalanceResponse:
    type: object
    properties:
      balance:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      QueryBalanceResponse is the response type for the Query/Balance RPC
      method.
  cosmos.bank.v1beta1.QueryDenomMetadataResponse:
    type: object
    properties:
      metadata:
        type: object
        properties:
          description:
            type: string
          denom_units:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  description: >-
                    denom represents the string name of the given denom unit
                    (e.g uatom).
                exponent:
                  type: integer
                  format: int64
                  description: >-
                    exponent represents power of 10 exponent that one must

                    raise the base_denom to in order to equal the given
                    DenomUnit's denom

                    1 denom = 1^exponent base_denom

                    (e.g. with a base_denom of uatom, one can create a DenomUnit
                    of 'atom' with

                    exponent = 6, thus: 1 atom = 10^6 uatom).
                aliases:
                  type: array
                  items:
                    type: string
                  title: aliases is a list of string aliases for the given denom
              description: |-
                DenomUnit represents a struct that describes a given
                denomination unit of the basic token.
            title: denom_units represents the list of DenomUnit's for a given coin
          base:
            type: string
            description: >-
              base represents the base denom (should be the DenomUnit with
              exponent = 0).
          display:
            type: string
            description: |-
              display indicates the suggested denom that should be
              displayed in clients.
        description: |-
          Metadata represents a struct that describes
          a basic token.
    description: >-
      QueryDenomMetadataResponse is the response type for the
      Query/DenomMetadata RPC

      method.
  cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
    type: object
    properties:
      metadatas:
        type: array
        items:
          type: object
          properties:
            description:
              type: string
            denom_units:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    description: >-
                      denom represents the string name of the given denom unit
                      (e.g uatom).
                  exponent:
                    type: integer
                    format: int64
                    description: >-
                      exponent represents power of 10 exponent that one must

                      raise the base_denom to in order to equal the given
                      DenomUnit's denom

                      1 denom = 1^exponent base_denom

                      (e.g. with a base_denom of uatom, one can create a
                      DenomUnit of 'atom' with

                      exponent = 6, thus: 1 atom = 10^6 uatom).
                  aliases:
                    type: array
                    items:
                      type: string
                    title: aliases is a list of string aliases for the given denom
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
              title: denom_units represents the list of DenomUnit's for a given coin
            base:
              type: string
              description: >-
                base represents the base denom (should be the DenomUnit with
                exponent = 0).
            display:
              type: string
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
          description: |-
            Metadata represents a struct that describes
            a basic token.
        description: >-
          metadata provides the client information for all the registered
          tokens.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryDenomsMetadataResponse is the response type for the
      Query/DenomsMetadata RPC

      method.
  cosmos.bank.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          send_enabled:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                enabled:
                  type: boolean
              description: >-
                SendEnabled maps coin denom to a send_enabled status (whether a
                denom is

                sendable).
          default_send_enabled:
            type: boolean
        description: Params defines the parameters for the bank module.
    description: >-
      QueryParamsResponse defines the response type for querying x/bank
      parameters.
  cosmos.bank.v1beta1.QuerySupplyOfResponse:
    type: object
    properties:
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC
      method.
  cosmos.bank.v1beta1.QueryTotalSupplyResponse:
    type: object
    properties:
      supply:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: supply is the supply of the coins
    title: >-
      QueryTotalSupplyResponse is the response type for the Query/TotalSupply
      RPC

      method
  cosmos.bank.v1beta1.SendEnabled:
    type: object
    properties:
      denom:
        type: string
      enabled:
        type: boolean
    description: |-
      SendEnabled maps coin denom to a send_enabled status (whether a denom is
      sendable).
  cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
    type: object
    properties:
      evidence:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        description: evidence returns all evidences.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAllEvidenceResponse is the response type for the Query/AllEvidence
      RPC

      method.
  cosmos.evidence.v1beta1.QueryEvidenceResponse:
    type: object
    properties:
      evidence:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    description: >-
      QueryEvidenceResponse is the response type for the Query/Evidence RPC
      method.
  cosmos.upgrade.v1beta1.Plan:
    type: object
    properties:
      name:
        type: string
        description: >-
          Sets the name for the upgrade. This name will be used by the upgraded

          version of the software to apply any special "on-upgrade" commands
          during

          the first BeginBlock method after the upgrade is applied. It is also
          used

          to detect whether a software version can handle a given upgrade. If no

          upgrade handler with this name has been set in the software, it will
          be

          assumed that the software is out-of-date when the upgrade Time or
          Height is

          reached and the software will exit.
      time:
        type: string
        format: date-time
        description: |-
          The time after which the upgrade must be performed.
          Leave set to its zero value to use a pre-defined Height instead.
      height:
        type: string
        format: int64
        description: |-
          The height at which the upgrade must be performed.
          Only used if Time is not set.
      info:
        type: string
        title: |-
          Any application specific upgrade info to be included on-chain
          such as a git commit that validators could automatically upgrade to
      upgraded_client_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: >-
          IBC-enabled chains can opt-in to including the upgraded client state
          in its upgrade plan

          This will make the chain commit to the correct upgraded (self) client
          state before the upgrade occurs,

          so that connecting chains can verify that the new upgraded client is
          valid by verifying a proof on the

          previous version of the chain.

          This will allow IBC connections to persist smoothly across planned
          chain upgrades
    description: >-
      Plan specifies information about a planned upgrade and when it should
      occur.
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
    type: object
    properties:
      height:
        type: string
        format: int64
        description: height is the block height at which the plan was applied.
    description: >-
      QueryAppliedPlanResponse is the response type for the Query/AppliedPlan
      RPC

      method.
  cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
    type: object
    properties:
      plan:
        description: plan is the current upgrade plan.
        type: object
        properties:
          name:
            type: string
            description: >-
              Sets the name for the upgrade. This name will be used by the
              upgraded

              version of the software to apply any special "on-upgrade" commands
              during

              the first BeginBlock method after the upgrade is applied. It is
              also used

              to detect whether a software version can handle a given upgrade.
              If no

              upgrade handler with this name has been set in the software, it
              will be

              assumed that the software is out-of-date when the upgrade Time or
              Height is

              reached and the software will exit.
          time:
            type: string
            format: date-time
            description: |-
              The time after which the upgrade must be performed.
              Leave set to its zero value to use a pre-defined Height instead.
          height:
            type: string
            format: int64
            description: |-
              The height at which the upgrade must be performed.
              Only used if Time is not set.
          info:
            type: string
            title: >-
              Any application specific upgrade info to be included on-chain

              such as a git commit that validators could automatically upgrade
              to
          upgraded_client_state:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            title: >-
              IBC-enabled chains can opt-in to including the upgraded client
              state in its upgrade plan

              This will make the chain commit to the correct upgraded (self)
              client state before the upgrade occurs,

              so that connecting chains can verify that the new upgraded client
              is valid by verifying a proof on the

              previous version of the chain.

              This will allow IBC connections to persist smoothly across planned
              chain upgrades
    description: >-
      QueryCurrentPlanResponse is the response type for the Query/CurrentPlan
      RPC

      method.
  cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
    type: object
    properties:
      upgraded_consensus_state:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    description: >-
      QueryUpgradedConsensusStateResponse is the response type for the
      Query/UpgradedConsensusState

      RPC method.
  irismod.nft.BaseNFT:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      uri:
        type: string
      data:
        type: string
      owner:
        type: string
    title: BaseNFT defines a non-fungible token
  irismod.nft.Collection:
    type: object
    properties:
      denom:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          schema:
            type: string
          creator:
            type: string
        title: Denom defines a type of NFT
      nfts:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            uri:
              type: string
            data:
              type: string
            owner:
              type: string
          title: BaseNFT defines a non-fungible token
    title: Collection defines a type of collection
  irismod.nft.Denom:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      schema:
        type: string
      creator:
        type: string
    title: Denom defines a type of NFT
  irismod.nft.IDCollection:
    type: object
    properties:
      denom_id:
        type: string
      token_ids:
        type: array
        items:
          type: string
    title: IDCollection defines a type of collection with specified ID
  irismod.nft.Owner:
    type: object
    properties:
      address:
        type: string
      id_collections:
        type: array
        items:
          type: object
          properties:
            denom_id:
              type: string
            token_ids:
              type: array
              items:
                type: string
          title: IDCollection defines a type of collection with specified ID
    title: Owner defines a type of owner
  irismod.nft.QueryCollectionResponse:
    type: object
    properties:
      collection:
        type: object
        properties:
          denom:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              schema:
                type: string
              creator:
                type: string
            title: Denom defines a type of NFT
          nfts:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                uri:
                  type: string
                data:
                  type: string
                owner:
                  type: string
              title: BaseNFT defines a non-fungible token
        title: Collection defines a type of collection
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: >-
      QueryCollectionResponse is the response type for the Query/Collection RPC
      method
  irismod.nft.QueryDenomResponse:
    type: object
    properties:
      denom:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          schema:
            type: string
          creator:
            type: string
        title: Denom defines a type of NFT
    title: QueryDenomResponse is the response type for the Query/Denom RPC method
  irismod.nft.QueryDenomsResponse:
    type: object
    properties:
      denoms:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            schema:
              type: string
            creator:
              type: string
          title: Denom defines a type of NFT
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: QueryDenomsResponse is the response type for the Query/Denoms RPC method
  irismod.nft.QueryNFTResponse:
    type: object
    properties:
      nft:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          uri:
            type: string
          data:
            type: string
          owner:
            type: string
        title: BaseNFT defines a non-fungible token
    title: QueryNFTResponse is the response type for the Query/NFT RPC method
  irismod.nft.QueryOwnerResponse:
    type: object
    properties:
      owner:
        type: object
        properties:
          address:
            type: string
          id_collections:
            type: array
            items:
              type: object
              properties:
                denom_id:
                  type: string
                token_ids:
                  type: array
                  items:
                    type: string
              title: IDCollection defines a type of collection with specified ID
        title: Owner defines a type of owner
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: QueryOwnerResponse is the response type for the Query/Owner RPC method
  irismod.nft.QuerySupplyResponse:
    type: object
    properties:
      amount:
        type: string
        format: uint64
    title: QuerySupplyResponse is the response type for the Query/Supply RPC method
  irismod.record.Content:
    type: object
    properties:
      digest:
        type: string
      digest_algo:
        type: string
      uri:
        type: string
      meta:
        type: string
    title: Content defines the detailed information for a record
  irismod.record.QueryRecordResponse:
    type: object
    properties:
      record:
        type: object
        properties:
          tx_hash:
            type: string
          contents:
            type: array
            items:
              type: object
              properties:
                digest:
                  type: string
                digest_algo:
                  type: string
                uri:
                  type: string
                meta:
                  type: string
              title: Content defines the detailed information for a record
          creator:
            type: string
        title: Record defines the record standard
    title: QueryRecordResponse is the response type for the Query/Record RPC method
  irismod.record.Record:
    type: object
    properties:
      tx_hash:
        type: string
      contents:
        type: array
        items:
          type: object
          properties:
            digest:
              type: string
            digest_algo:
              type: string
            uri:
              type: string
            meta:
              type: string
          title: Content defines the detailed information for a record
      creator:
        type: string
    title: Record defines the record standard
  irismod.service.Params:
    type: object
    properties:
      max_request_timeout:
        type: string
        format: int64
      min_deposit_multiple:
        type: string
        format: int64
      min_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      service_fee_tax:
        type: string
      slash_fraction:
        type: string
      complaint_retrospect:
        type: string
      arbitration_time_limit:
        type: string
      tx_size_limit:
        type: string
        format: uint64
      base_denom:
        type: string
      restricted_service_fee_denom:
        type: boolean
    title: Params defines service module's parameters
  irismod.service.QueryBindingResponse:
    type: object
    properties:
      service_binding:
        type: object
        properties:
          service_name:
            type: string
          provider:
            type: string
          deposit:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          pricing:
            type: string
          qos:
            type: string
            format: uint64
          options:
            type: string
          available:
            type: boolean
          disabled_time:
            type: string
            format: date-time
          owner:
            type: string
        title: ServiceBinding defines a standard for service binding
    title: QueryDefinitionResponse is response type for the Query/Binding RPC method
  irismod.service.QueryBindingsResponse:
    type: object
    properties:
      service_bindings:
        type: array
        items:
          type: object
          properties:
            service_name:
              type: string
            provider:
              type: string
            deposit:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            pricing:
              type: string
            qos:
              type: string
              format: uint64
            options:
              type: string
            available:
              type: boolean
            disabled_time:
              type: string
              format: date-time
            owner:
              type: string
          title: ServiceBinding defines a standard for service binding
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: >-
      QueryDefinitionsResponse is response type for the Query/Bindings RPC
      method
  irismod.service.QueryDefinitionResponse:
    type: object
    properties:
      service_definition:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          tags:
            type: array
            items:
              type: string
          author:
            type: string
          author_description:
            type: string
          schemas:
            type: string
        title: ServiceDefinition defines a standard for service definition
    title: >-
      QueryDefinitionResponse is response type for the Query/Definition RPC
      method
  irismod.service.QueryEarnedFeesResponse:
    type: object
    properties:
      fees:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    title: >-
      QueryEarnedFeesResponse is response type for the Query/EarnedFees RPC
      method
  irismod.service.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          max_request_timeout:
            type: string
            format: int64
          min_deposit_multiple:
            type: string
            format: int64
          min_deposit:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          service_fee_tax:
            type: string
          slash_fraction:
            type: string
          complaint_retrospect:
            type: string
          arbitration_time_limit:
            type: string
          tx_size_limit:
            type: string
            format: uint64
          base_denom:
            type: string
          restricted_service_fee_denom:
            type: boolean
        title: Params defines service module's parameters
      res:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: >-
      QueryParametersResponse is response type for the Query/Parameters RPC
      method
  irismod.service.QueryRequestContextResponse:
    type: object
    properties:
      request_context:
        type: object
        properties:
          service_name:
            type: string
          providers:
            type: array
            items:
              type: string
          consumer:
            type: string
          input:
            type: string
          service_fee_cap:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          module_name:
            type: string
          timeout:
            type: string
            format: int64
          repeated:
            type: boolean
          repeated_frequency:
            type: string
            format: uint64
          repeated_total:
            type: string
            format: int64
          batch_counter:
            type: string
            format: uint64
          batch_request_count:
            type: integer
            format: int64
          batch_response_count:
            type: integer
            format: int64
          batch_response_threshold:
            type: integer
            format: int64
          response_threshold:
            type: integer
            format: int64
          batch_state:
            type: string
            enum:
              - BATCH_RUNNING
              - BATCH_COMPLETED
            default: BATCH_RUNNING
            description: |-
              - BATCH_RUNNING: BATCH_RUNNING defines the running batch status.
               - BATCH_COMPLETED: BATCH_COMPLETED defines the completed batch status.
            title: >-
              RequestContextBatchState is a type alias that represents a request
              batch status as a byte
          state:
            type: string
            enum:
              - RUNNING
              - PAUSED
              - COMPLETED
            default: RUNNING
            description: |-
              - RUNNING: RUNNING defines the running request context status
               - PAUSED: PAUSED defines the paused request context status
               - COMPLETED: COMPLETED defines the completed request context status
            title: >-
              RequestContextState is a type alias that represents a request
              status as a byte
        title: RequestContext defines a standard for request context
    title: >-
      QueryRequestContextResponse is response type for the Query/RequestContext
      RPC method
  irismod.service.QueryRequestResponse:
    type: object
    properties:
      request:
        type: object
        properties:
          id:
            type: string
          service_name:
            type: string
          provider:
            type: string
          consumer:
            type: string
          input:
            type: string
          service_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          request_height:
            type: string
            format: int64
          expiration_height:
            type: string
            format: int64
          request_context_id:
            type: string
          request_context_batch_counter:
            type: string
            format: uint64
        title: Request defines a standard for request
    title: QueryRequestResponse is response type for the Query/Request RPC method
  irismod.service.QueryRequestsByReqCtxResponse:
    type: object
    properties:
      requests:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            service_name:
              type: string
            provider:
              type: string
            consumer:
              type: string
            input:
              type: string
            service_fee:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            request_height:
              type: string
              format: int64
            expiration_height:
              type: string
              format: int64
            request_context_id:
              type: string
            request_context_batch_counter:
              type: string
              format: uint64
          title: Request defines a standard for request
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: >-
      QueryRequestsByReqCtxResponse is response type for the
      Query/RequestsByReqCtx RPC method
  irismod.service.QueryRequestsResponse:
    type: object
    properties:
      requests:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            service_name:
              type: string
            provider:
              type: string
            consumer:
              type: string
            input:
              type: string
            service_fee:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            request_height:
              type: string
              format: int64
            expiration_height:
              type: string
              format: int64
            request_context_id:
              type: string
            request_context_batch_counter:
              type: string
              format: uint64
          title: Request defines a standard for request
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: QueryRequestsResponse is response type for the Query/Requests RPC method
  irismod.service.QueryResponseResponse:
    type: object
    properties:
      response:
        type: object
        properties:
          provider:
            type: string
          consumer:
            type: string
          result:
            type: string
          output:
            type: string
          request_context_id:
            type: string
          request_context_batch_counter:
            type: string
            format: uint64
        title: Response defines a standard for response
    title: QueryResponseResponse is response type for the Query/Response RPC method
  irismod.service.QueryResponsesResponse:
    type: object
    properties:
      responses:
        type: array
        items:
          type: object
          properties:
            provider:
              type: string
            consumer:
              type: string
            result:
              type: string
            output:
              type: string
            request_context_id:
              type: string
            request_context_batch_counter:
              type: string
              format: uint64
          title: Response defines a standard for response
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: QueryResponsesResponse is response type for the Query/Responses RPC method
  irismod.service.QuerySchemaResponse:
    type: object
    properties:
      schema:
        type: string
    title: QuerySchemaResponse is response type for the Query/Schema RPC method
  irismod.service.QueryWithdrawAddressResponse:
    type: object
    properties:
      withdraw_address:
        type: string
    title: >-
      QueryWithdrawAddressResponse is response type for the
      Query/WithdrawAddress RPC method
  irismod.service.Request:
    type: object
    properties:
      id:
        type: string
      service_name:
        type: string
      provider:
        type: string
      consumer:
        type: string
      input:
        type: string
      service_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      request_height:
        type: string
        format: int64
      expiration_height:
        type: string
        format: int64
      request_context_id:
        type: string
      request_context_batch_counter:
        type: string
        format: uint64
    title: Request defines a standard for request
  irismod.service.RequestContext:
    type: object
    properties:
      service_name:
        type: string
      providers:
        type: array
        items:
          type: string
      consumer:
        type: string
      input:
        type: string
      service_fee_cap:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      module_name:
        type: string
      timeout:
        type: string
        format: int64
      repeated:
        type: boolean
      repeated_frequency:
        type: string
        format: uint64
      repeated_total:
        type: string
        format: int64
      batch_counter:
        type: string
        format: uint64
      batch_request_count:
        type: integer
        format: int64
      batch_response_count:
        type: integer
        format: int64
      batch_response_threshold:
        type: integer
        format: int64
      response_threshold:
        type: integer
        format: int64
      batch_state:
        type: string
        enum:
          - BATCH_RUNNING
          - BATCH_COMPLETED
        default: BATCH_RUNNING
        description: |-
          - BATCH_RUNNING: BATCH_RUNNING defines the running batch status.
           - BATCH_COMPLETED: BATCH_COMPLETED defines the completed batch status.
        title: >-
          RequestContextBatchState is a type alias that represents a request
          batch status as a byte
      state:
        type: string
        enum:
          - RUNNING
          - PAUSED
          - COMPLETED
        default: RUNNING
        description: |-
          - RUNNING: RUNNING defines the running request context status
           - PAUSED: PAUSED defines the paused request context status
           - COMPLETED: COMPLETED defines the completed request context status
        title: >-
          RequestContextState is a type alias that represents a request status
          as a byte
    title: RequestContext defines a standard for request context
  irismod.service.RequestContextBatchState:
    type: string
    enum:
      - BATCH_RUNNING
      - BATCH_COMPLETED
    default: BATCH_RUNNING
    description: |-
      - BATCH_RUNNING: BATCH_RUNNING defines the running batch status.
       - BATCH_COMPLETED: BATCH_COMPLETED defines the completed batch status.
    title: >-
      RequestContextBatchState is a type alias that represents a request batch
      status as a byte
  irismod.service.RequestContextState:
    type: string
    enum:
      - RUNNING
      - PAUSED
      - COMPLETED
    default: RUNNING
    description: |-
      - RUNNING: RUNNING defines the running request context status
       - PAUSED: PAUSED defines the paused request context status
       - COMPLETED: COMPLETED defines the completed request context status
    title: >-
      RequestContextState is a type alias that represents a request status as a
      byte
  irismod.service.Response:
    type: object
    properties:
      provider:
        type: string
      consumer:
        type: string
      result:
        type: string
      output:
        type: string
      request_context_id:
        type: string
      request_context_batch_counter:
        type: string
        format: uint64
    title: Response defines a standard for response
  irismod.service.ServiceBinding:
    type: object
    properties:
      service_name:
        type: string
      provider:
        type: string
      deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      pricing:
        type: string
      qos:
        type: string
        format: uint64
      options:
        type: string
      available:
        type: boolean
      disabled_time:
        type: string
        format: date-time
      owner:
        type: string
    title: ServiceBinding defines a standard for service binding
  irismod.service.ServiceDefinition:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      author:
        type: string
      author_description:
        type: string
      schemas:
        type: string
    title: ServiceDefinition defines a standard for service definition
  irismod.token.Params:
    type: object
    properties:
      token_tax_rate:
        type: string
      issue_token_base_fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      mint_token_fee_ratio:
        type: string
    title: Params defines token module's parameters
  irismod.token.QueryFeesResponse:
    type: object
    properties:
      exist:
        type: boolean
      issue_fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      mint_fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    title: QueryFeesResponse is response type for the Query/Fees RPC method
  irismod.token.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          token_tax_rate:
            type: string
          issue_token_base_fee:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          mint_token_fee_ratio:
            type: string
        title: Params defines token module's parameters
      res:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: >-
      QueryParametersResponse is response type for the Query/Parameters RPC
      method
  irismod.token.QueryTokenResponse:
    type: object
    properties:
      Token:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    title: QueryTokenResponse is response type for the Query/Token RPC method
  irismod.token.QueryTokensResponse:
    type: object
    properties:
      Tokens:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    title: QueryTokensResponse is response type for the Query/Tokens RPC method
  irismod.token.QueryTotalBurnResponse:
    type: object
    properties:
      burned_coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    title: QueryTotalBurnResponse is response type for the Query/TotalBurn RPC method
  cosmos.query.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.
          count_total

          is only respected when offset is used. It is ignored when key is set.
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest page = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.query.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        title: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
    title: >-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding

      request message has used PageRequest
  iritamod.node.Node:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      certificate:
        type: string
    title: Node defines a struct to represent a node identity
  iritamod.node.Params:
    type: object
    properties:
      historical_entries:
        type: integer
        format: int64
    description: Params defines the parameters for the node module.
  iritamod.node.QueryNodeResponse:
    type: object
    properties:
      node:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          certificate:
            type: string
        title: Node defines a struct to represent a node identity
    title: QueryNodeResponse is the response type for the Query/Node RPC method
  iritamod.node.QueryNodesResponse:
    type: object
    properties:
      nodes:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            certificate:
              type: string
          title: Node defines a struct to represent a node identity
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        title: >-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding

          request message has used PageRequest
    title: QueryNodesResponse is the response type for the Query/Nodes RPC method
  iritamod.node.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          historical_entries:
            type: integer
            format: int64
        description: Params defines the parameters for the node module.
    title: QueryParamsResponse is the response type for the Query/Params RPC method
  iritamod.node.QueryValidatorResponse:
    type: object
    properties:
      validator:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          pubkey:
            type: string
          certificate:
            type: string
          power:
            type: string
            format: int64
          description:
            type: string
          jailed:
            type: boolean
          operator:
            type: string
        description: >-
          Request defines a standard for validator. The validator will
          participate the

          blockchain consensus, power determines the probability of proposing a
          new block.
    title: >-
      QueryValidatorResponse is the response type for the Query/Validator RPC
      method
  iritamod.node.QueryValidatorsResponse:
    type: object
    properties:
      validators:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            pubkey:
              type: string
            certificate:
              type: string
            power:
              type: string
              format: int64
            description:
              type: string
            jailed:
              type: boolean
            operator:
              type: string
          description: >-
            Request defines a standard for validator. The validator will
            participate the

            blockchain consensus, power determines the probability of proposing
            a new block.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        title: >-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding

          request message has used PageRequest
    title: >-
      QueryValidatorsResponse is the response type for the Query/Validators RPC
      method
  iritamod.node.Validator:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      pubkey:
        type: string
      certificate:
        type: string
      power:
        type: string
        format: int64
      description:
        type: string
      jailed:
        type: boolean
      operator:
        type: string
    description: >-
      Request defines a standard for validator. The validator will participate
      the

      blockchain consensus, power determines the probability of proposing a new
      block.
  iritamod.identity.Identity:
    type: object
    properties:
      id:
        type: string
      pub_keys:
        type: array
        items:
          type: object
          properties:
            pub_key:
              type: string
            algorithm:
              type: string
              enum:
                - UnknownPubKeyAlgorithm
                - RSA
                - DSA
                - ECDSA
                - ED25519
                - SM2
              default: UnknownPubKeyAlgorithm
              description: >-
                - UnknownPubKeyAlgorithm: UnknownPubKeyAlgorithm defines an
                unknown algorithm name
                 - RSA: RSA defines a RSA algorithm name
                 - DSA: DSA defines a DSA algorithm name.
                 - ECDSA: ECDSA defines an ECDSA algorithm name.
                 - ED25519: ED25519 defines an ED25519 algorithm name.
                 - SM2: SM2 defines an SM2 algorithm name.
              title: PubKeyAlgorithm defines the algorithm names for the public key
          title: >-
            PubKey represents a public key along with the corresponding
            algorithm
      certificates:
        type: array
        items:
          type: string
      credentials:
        type: string
      owner:
        type: string
    title: Identity defines a struct for an identity
  iritamod.identity.PubKeyAlgorithm:
    type: string
    enum:
      - UnknownPubKeyAlgorithm
      - RSA
      - DSA
      - ECDSA
      - ED25519
      - SM2
    default: UnknownPubKeyAlgorithm
    description: >-
      - UnknownPubKeyAlgorithm: UnknownPubKeyAlgorithm defines an unknown
      algorithm name
       - RSA: RSA defines a RSA algorithm name
       - DSA: DSA defines a DSA algorithm name.
       - ECDSA: ECDSA defines an ECDSA algorithm name.
       - ED25519: ED25519 defines an ED25519 algorithm name.
       - SM2: SM2 defines an SM2 algorithm name.
    title: PubKeyAlgorithm defines the algorithm names for the public key
  iritamod.identity.PubKeyInfo:
    type: object
    properties:
      pub_key:
        type: string
      algorithm:
        type: string
        enum:
          - UnknownPubKeyAlgorithm
          - RSA
          - DSA
          - ECDSA
          - ED25519
          - SM2
        default: UnknownPubKeyAlgorithm
        description: >-
          - UnknownPubKeyAlgorithm: UnknownPubKeyAlgorithm defines an unknown
          algorithm name
           - RSA: RSA defines a RSA algorithm name
           - DSA: DSA defines a DSA algorithm name.
           - ECDSA: ECDSA defines an ECDSA algorithm name.
           - ED25519: ED25519 defines an ED25519 algorithm name.
           - SM2: SM2 defines an SM2 algorithm name.
        title: PubKeyAlgorithm defines the algorithm names for the public key
    title: PubKey represents a public key along with the corresponding algorithm
  iritamod.identity.QueryIdentityResponse:
    type: object
    properties:
      identity:
        type: object
        properties:
          id:
            type: string
          pub_keys:
            type: array
            items:
              type: object
              properties:
                pub_key:
                  type: string
                algorithm:
                  type: string
                  enum:
                    - UnknownPubKeyAlgorithm
                    - RSA
                    - DSA
                    - ECDSA
                    - ED25519
                    - SM2
                  default: UnknownPubKeyAlgorithm
                  description: >-
                    - UnknownPubKeyAlgorithm: UnknownPubKeyAlgorithm defines an
                    unknown algorithm name
                     - RSA: RSA defines a RSA algorithm name
                     - DSA: DSA defines a DSA algorithm name.
                     - ECDSA: ECDSA defines an ECDSA algorithm name.
                     - ED25519: ED25519 defines an ED25519 algorithm name.
                     - SM2: SM2 defines an SM2 algorithm name.
                  title: >-
                    PubKeyAlgorithm defines the algorithm names for the public
                    key
              title: >-
                PubKey represents a public key along with the corresponding
                algorithm
          certificates:
            type: array
            items:
              type: string
          credentials:
            type: string
          owner:
            type: string
        title: Identity defines a struct for an identity
    title: QueryIdentityResponse is response type for the Query/Identity RPC method
  cosmwasm.wasm.v1beta1.AbsoluteTxPosition:
    type: object
    properties:
      block_height:
        type: string
        format: uint64
        title: BlockHeight is the block the contract was created at
      tx_index:
        type: string
        format: uint64
        title: >-
          TxIndex is a monotonic counter within the block (actual transaction
          index, or gas consumed)
    description: >-
      AbsoluteTxPosition is a unique transaction position that allows for global
      ordering of transactions.
  cosmwasm.wasm.v1beta1.CodeInfoResponse:
    type: object
    properties:
      code_id:
        type: string
        format: uint64
      creator:
        type: string
      data_hash:
        type: string
        format: byte
      source:
        type: string
      builder:
        type: string
    title: CodeInfoResponse contains code meta data from CodeInfo
  cosmwasm.wasm.v1beta1.ContractCodeHistoryEntry:
    type: object
    properties:
      operation:
        type: string
        enum:
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
        default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
        description: >-
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
          ContractCodeHistoryOperationTypeUnspecified placeholder for empty
          value
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
        title: ContractCodeHistoryOperationType actions that caused a code change
      code_id:
        type: string
        format: uint64
        title: CodeID is the reference to the stored WASM code
      updated:
        description: Updated Tx position when the operation was executed.
        type: object
        properties:
          block_height:
            type: string
            format: uint64
            title: BlockHeight is the block the contract was created at
          tx_index:
            type: string
            format: uint64
            title: >-
              TxIndex is a monotonic counter within the block (actual
              transaction index, or gas consumed)
      msg:
        type: string
        format: byte
    description: ContractCodeHistoryEntry metadata to a contract.
  cosmwasm.wasm.v1beta1.ContractCodeHistoryOperationType:
    type: string
    enum:
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
    default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
    description: >-
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
      ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
    title: ContractCodeHistoryOperationType actions that caused a code change
  cosmwasm.wasm.v1beta1.ContractInfo:
    type: object
    properties:
      code_id:
        type: string
        format: uint64
        title: CodeID is the reference to the stored Wasm code
      creator:
        type: string
        title: Creator address who initially instantiated the contract
      admin:
        type: string
        title: Admin is an optional address that can execute migrations
      label:
        type: string
        description: Label is optional metadata to be stored with a contract instance.
      created:
        title: >-
          Created Tx position when the contract was instantiated.

          This data should kept internal and not be exposed via query results.
          Just use for sorting
        type: object
        properties:
          block_height:
            type: string
            format: uint64
            title: BlockHeight is the block the contract was created at
          tx_index:
            type: string
            format: uint64
            title: >-
              TxIndex is a monotonic counter within the block (actual
              transaction index, or gas consumed)
        description: >-
          AbsoluteTxPosition is a unique transaction position that allows for
          global ordering of transactions.
    title: ContractInfo stores a WASM contract instance
  cosmwasm.wasm.v1beta1.ContractInfoWithAddress:
    type: object
    properties:
      address:
        type: string
      contract_info:
        type: object
        properties:
          code_id:
            type: string
            format: uint64
            title: CodeID is the reference to the stored Wasm code
          creator:
            type: string
            title: Creator address who initially instantiated the contract
          admin:
            type: string
            title: Admin is an optional address that can execute migrations
          label:
            type: string
            description: Label is optional metadata to be stored with a contract instance.
          created:
            title: >-
              Created Tx position when the contract was instantiated.

              This data should kept internal and not be exposed via query
              results. Just use for sorting
            type: object
            properties:
              block_height:
                type: string
                format: uint64
                title: BlockHeight is the block the contract was created at
              tx_index:
                type: string
                format: uint64
                title: >-
                  TxIndex is a monotonic counter within the block (actual
                  transaction index, or gas consumed)
            description: >-
              AbsoluteTxPosition is a unique transaction position that allows
              for global ordering of transactions.
        title: ContractInfo stores a WASM contract instance
    title: >-
      ContractInfoWithAddress adds the address (key) to the ContractInfo
      representation
  cosmwasm.wasm.v1beta1.Model:
    type: object
    properties:
      key:
        type: string
        format: byte
        title: hex-encode key to read it better (this is often ascii)
      value:
        type: string
        format: byte
        title: base64-encode raw value
    title: Model is a struct that holds a KV pair
  cosmwasm.wasm.v1beta1.QueryAllContractStateResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
              format: byte
              title: hex-encode key to read it better (this is often ascii)
            value:
              type: string
              format: byte
              title: base64-encode raw value
          title: Model is a struct that holds a KV pair
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: >-
      QueryAllContractStateResponse is the response type for the
      Query/AllContractState RPC method
  cosmwasm.wasm.v1beta1.QueryCodeResponse:
    type: object
    properties:
      code_info:
        type: object
        properties:
          code_id:
            type: string
            format: uint64
          creator:
            type: string
          data_hash:
            type: string
            format: byte
          source:
            type: string
          builder:
            type: string
        title: CodeInfoResponse contains code meta data from CodeInfo
      data:
        type: string
        format: byte
    title: QueryCodeResponse is the response type for the Query/Code RPC method
  cosmwasm.wasm.v1beta1.QueryCodesResponse:
    type: object
    properties:
      code_infos:
        type: array
        items:
          type: object
          properties:
            code_id:
              type: string
              format: uint64
            creator:
              type: string
            data_hash:
              type: string
              format: byte
            source:
              type: string
            builder:
              type: string
          title: CodeInfoResponse contains code meta data from CodeInfo
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: QueryCodesResponse is the response type for the Query/Codes RPC method
  cosmwasm.wasm.v1beta1.QueryContractHistoryResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          type: object
          properties:
            operation:
              type: string
              enum:
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
              default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
              description: >-
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
                ContractCodeHistoryOperationTypeUnspecified placeholder for
                empty value
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
              title: >-
                ContractCodeHistoryOperationType actions that caused a code
                change
            code_id:
              type: string
              format: uint64
              title: CodeID is the reference to the stored WASM code
            updated:
              description: Updated Tx position when the operation was executed.
              type: object
              properties:
                block_height:
                  type: string
                  format: uint64
                  title: BlockHeight is the block the contract was created at
                tx_index:
                  type: string
                  format: uint64
                  title: >-
                    TxIndex is a monotonic counter within the block (actual
                    transaction index, or gas consumed)
            msg:
              type: string
              format: byte
          description: ContractCodeHistoryEntry metadata to a contract.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: >-
      QueryContractHistoryResponse is the response type for the
      Query/ContractHistory RPC method
  cosmwasm.wasm.v1beta1.QueryContractInfoResponse:
    type: object
    properties:
      address:
        type: string
        title: address is the address of the contract
      contract_info:
        type: object
        properties:
          code_id:
            type: string
            format: uint64
            title: CodeID is the reference to the stored Wasm code
          creator:
            type: string
            title: Creator address who initially instantiated the contract
          admin:
            type: string
            title: Admin is an optional address that can execute migrations
          label:
            type: string
            description: Label is optional metadata to be stored with a contract instance.
          created:
            title: >-
              Created Tx position when the contract was instantiated.

              This data should kept internal and not be exposed via query
              results. Just use for sorting
            type: object
            properties:
              block_height:
                type: string
                format: uint64
                title: BlockHeight is the block the contract was created at
              tx_index:
                type: string
                format: uint64
                title: >-
                  TxIndex is a monotonic counter within the block (actual
                  transaction index, or gas consumed)
            description: >-
              AbsoluteTxPosition is a unique transaction position that allows
              for global ordering of transactions.
        title: ContractInfo stores a WASM contract instance
    title: >-
      QueryContractInfoResponse is the response type for the Query/ContractInfo
      RPC method
  cosmwasm.wasm.v1beta1.QueryContractsByCodeResponse:
    type: object
    properties:
      contract_infos:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            contract_info:
              type: object
              properties:
                code_id:
                  type: string
                  format: uint64
                  title: CodeID is the reference to the stored Wasm code
                creator:
                  type: string
                  title: Creator address who initially instantiated the contract
                admin:
                  type: string
                  title: Admin is an optional address that can execute migrations
                label:
                  type: string
                  description: >-
                    Label is optional metadata to be stored with a contract
                    instance.
                created:
                  title: >-
                    Created Tx position when the contract was instantiated.

                    This data should kept internal and not be exposed via query
                    results. Just use for sorting
                  type: object
                  properties:
                    block_height:
                      type: string
                      format: uint64
                      title: BlockHeight is the block the contract was created at
                    tx_index:
                      type: string
                      format: uint64
                      title: >-
                        TxIndex is a monotonic counter within the block (actual
                        transaction index, or gas consumed)
                  description: >-
                    AbsoluteTxPosition is a unique transaction position that
                    allows for global ordering of transactions.
              title: ContractInfo stores a WASM contract instance
          title: >-
            ContractInfoWithAddress adds the address (key) to the ContractInfo
            representation
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: >-
      QueryContractsByCodeResponse is the response type for the
      Query/ContractsByCode RPC method
  cosmwasm.wasm.v1beta1.QueryRawContractStateResponse:
    type: object
    properties:
      data:
        type: string
        format: byte
        title: Data contains the raw store data
    title: >-
      QueryRawContractStateResponse is the response type for the
      Query/RawContractState RPC method
  cosmwasm.wasm.v1beta1.QuerySmartContractStateResponse:
    type: object
    properties:
      data:
        type: string
        format: byte
        title: Data contains the json data returned from the smart contract
    title: >-
      QuerySmartContractStateResponse is the response type for the
      Query/SmartContractState RPC method
